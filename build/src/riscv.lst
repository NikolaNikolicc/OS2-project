GAS LISTING /tmp/ccSTET18.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv14switch_to_userEv
   9              	_ZN5Riscv14switch_to_userEv:
  10              	.LFB73:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   3:src/riscv.cpp **** #include "../h/TCB.hpp"
   4:src/riscv.cpp **** #include "../h/semaphore.hpp"
   5:src/riscv.cpp **** #include "../h/console.hpp"
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** void Riscv::switch_to_user(){
  12              		.loc 1 7 29
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp ****     mc_sstatus(SSTATUS_SPP);
  20              		.loc 1 8 5
  21              	.LVL0:
  22              	.LBB75:
  23              	.LBB76:
  24              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef _riscv_hpp_
   2:src/../h/riscv.hpp **** #define _riscv_hpp_
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv
   7:src/../h/riscv.hpp **** {
   8:src/../h/riscv.hpp **** public:
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp ****     // u korisnicki
  11:src/../h/riscv.hpp ****     static void switch_to_user();
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     // u privilegovani
  14:src/../h/riscv.hpp ****     static void switch_to_priviledged();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  17:src/../h/riscv.hpp ****     static void pushRegisters();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  20:src/../h/riscv.hpp ****     static void popRegisters();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  23:src/../h/riscv.hpp ****     static void popSppSpie();
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register scause
  26:src/../h/riscv.hpp ****     static uint64 r_scause();
GAS LISTING /tmp/ccSTET18.s 			page 2


  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register scause
  29:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register sepc
  32:src/../h/riscv.hpp ****     static uint64 r_sepc();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register sepc
  35:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     // read register stvec
  38:src/../h/riscv.hpp ****     static uint64 r_stvec();
  39:src/../h/riscv.hpp **** 
  40:src/../h/riscv.hpp ****     // write register stvec
  41:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  42:src/../h/riscv.hpp **** 
  43:src/../h/riscv.hpp ****     // read register stval
  44:src/../h/riscv.hpp ****     static uint64 r_stval();
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     // write register stval
  47:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     enum BitMaskSip
  50:src/../h/riscv.hpp ****     {
  51:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  52:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  53:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  54:src/../h/riscv.hpp ****     };
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     // mask set register sip
  57:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp ****     // mask clear register sip
  60:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  61:src/../h/riscv.hpp **** 
  62:src/../h/riscv.hpp ****     // read register sip
  63:src/../h/riscv.hpp ****     static uint64 r_sip();
  64:src/../h/riscv.hpp **** 
  65:src/../h/riscv.hpp ****     // write register sip
  66:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     enum BitMaskSstatus
  69:src/../h/riscv.hpp ****     {
  70:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  71:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  72:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  73:src/../h/riscv.hpp ****     };
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // mask set register sstatus
  76:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp ****     // mask clear register sstatus
  79:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  80:src/../h/riscv.hpp **** 
  81:src/../h/riscv.hpp ****     // read register sstatus
  82:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  83:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccSTET18.s 			page 3


  84:src/../h/riscv.hpp ****     // write register sstatus
  85:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  86:src/../h/riscv.hpp **** 
  87:src/../h/riscv.hpp ****     // supervisor trap
  88:src/../h/riscv.hpp ****     static void supervisorTrap();
  89:src/../h/riscv.hpp **** 
  90:src/../h/riscv.hpp **** private:
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp ****     // supervisor trap handler
  93:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  94:src/../h/riscv.hpp **** 
  95:src/../h/riscv.hpp **** };
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     uint64 volatile scause;
 101:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 102:src/../h/riscv.hpp ****     return scause;
 103:src/../h/riscv.hpp **** }
 104:src/../h/riscv.hpp **** 
 105:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 106:src/../h/riscv.hpp **** {
 107:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     uint64 volatile sepc;
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 114:src/../h/riscv.hpp ****     return sepc;
 115:src/../h/riscv.hpp **** }
 116:src/../h/riscv.hpp **** 
 117:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 118:src/../h/riscv.hpp **** {
 119:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     uint64 volatile stvec;
 125:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 126:src/../h/riscv.hpp ****     return stvec;
 127:src/../h/riscv.hpp **** }
 128:src/../h/riscv.hpp **** 
 129:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 130:src/../h/riscv.hpp **** {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     uint64 volatile stval;
 137:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 138:src/../h/riscv.hpp ****     return stval;
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccSTET18.s 			page 4


 141:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 142:src/../h/riscv.hpp **** {
 143:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 147:src/../h/riscv.hpp **** {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     uint64 volatile sip;
 159:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 160:src/../h/riscv.hpp ****     return sip;
 161:src/../h/riscv.hpp **** }
 162:src/../h/riscv.hpp **** 
 163:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 164:src/../h/riscv.hpp **** {
 165:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 169:src/../h/riscv.hpp **** {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
  25              		.loc 2 175 5
  26              		.loc 2 175 68 is_stmt 0
  27 000c 93070010 		li	a5,256
  28              	#APP
  29              	# 175 "src/../h/riscv.hpp" 1
 176              	}
  30              		csrc sstatus, a5
  31              	# 0 "" 2
  32              	.LVL1:
  33              	#NO_APP
  34              	.LBE76:
  35              	.LBE75:
   9:src/riscv.cpp **** }
  36              		.loc 1 9 1
  37 0014 03348100 		ld	s0,8(sp)
  38              		.cfi_restore 8
  39              		.cfi_def_cfa 2, 16
  40 0018 13010101 		addi	sp,sp,16
  41              		.cfi_def_cfa_offset 0
  42 001c 67800000 		jr	ra
  43              		.cfi_endproc
  44              	.LFE73:
GAS LISTING /tmp/ccSTET18.s 			page 5


  46              		.align	2
  47              		.globl	_ZN5Riscv21switch_to_priviledgedEv
  49              	_ZN5Riscv21switch_to_priviledgedEv:
  50              	.LFB74:
  10:src/riscv.cpp **** 
  11:src/riscv.cpp **** void Riscv::switch_to_priviledged() {
  51              		.loc 1 11 37 is_stmt 1
  52              		.cfi_startproc
  53 0020 130101FF 		addi	sp,sp,-16
  54              		.cfi_def_cfa_offset 16
  55 0024 23348100 		sd	s0,8(sp)
  56              		.cfi_offset 8, -8
  57 0028 13040101 		addi	s0,sp,16
  58              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     ms_sstatus(SSTATUS_SPP);
  59              		.loc 1 12 5
  60              	.LVL2:
  61              	.LBB77:
  62              	.LBB78:
 170:src/../h/riscv.hpp **** }
  63              		.loc 2 170 5
 170:src/../h/riscv.hpp **** }
  64              		.loc 2 170 68 is_stmt 0
  65 002c 93070010 		li	a5,256
  66              	#APP
  67              	# 170 "src/../h/riscv.hpp" 1
  68              		csrs sstatus, a5
  69              	# 0 "" 2
  70              	.LVL3:
  71              	#NO_APP
  72              	.LBE78:
  73              	.LBE77:
  13:src/riscv.cpp **** }
  74              		.loc 1 13 1
  75 0034 03348100 		ld	s0,8(sp)
  76              		.cfi_restore 8
  77              		.cfi_def_cfa 2, 16
  78 0038 13010101 		addi	sp,sp,16
  79              		.cfi_def_cfa_offset 0
  80 003c 67800000 		jr	ra
  81              		.cfi_endproc
  82              	.LFE74:
  84              		.align	2
  85              		.globl	_ZN5Riscv10popSppSpieEv
  87              	_ZN5Riscv10popSppSpieEv:
  88              	.LFB75:
  14:src/riscv.cpp **** 
  15:src/riscv.cpp **** void Riscv::popSppSpie(){
  89              		.loc 1 15 25 is_stmt 1
  90              		.cfi_startproc
  91 0040 130101FF 		addi	sp,sp,-16
  92              		.cfi_def_cfa_offset 16
  93 0044 23348100 		sd	s0,8(sp)
  94              		.cfi_offset 8, -8
  95 0048 13040101 		addi	s0,sp,16
  96              		.cfi_def_cfa 8, 0
  16:src/riscv.cpp **** 
GAS LISTING /tmp/ccSTET18.s 			page 6


  17:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  97              		.loc 1 17 5
  98              		.loc 1 17 38 is_stmt 0
  99              	#APP
 100              	# 17 "src/riscv.cpp" 1
  18              	    __asm__ volatile("sret");
 101              		csrw sepc, ra
 102              	# 0 "" 2
 103              		.loc 1 18 5 is_stmt 1
 104              		.loc 1 18 29 is_stmt 0
 105              	# 18 "src/riscv.cpp" 1
  19              	}
 106              		sret
 107              	# 0 "" 2
 108              		.loc 1 19 1
 109              	#NO_APP
 110 0054 03348100 		ld	s0,8(sp)
 111              		.cfi_restore 8
 112              		.cfi_def_cfa 2, 16
 113 0058 13010101 		addi	sp,sp,16
 114              		.cfi_def_cfa_offset 0
 115 005c 67800000 		jr	ra
 116              		.cfi_endproc
 117              	.LFE75:
 119              		.align	2
 120              		.globl	_ZN5Riscv20handleSupervisorTrapEv
 122              	_ZN5Riscv20handleSupervisorTrapEv:
 123              	.LFB76:
  20:src/riscv.cpp **** 
  21:src/riscv.cpp **** void Riscv::handleSupervisorTrap(){
 124              		.loc 1 21 35 is_stmt 1
 125              		.cfi_startproc
 126 0060 130101F5 		addi	sp,sp,-176
 127              		.cfi_def_cfa_offset 176
 128 0064 2334110A 		sd	ra,168(sp)
 129 0068 2330810A 		sd	s0,160(sp)
 130 006c 233C9108 		sd	s1,152(sp)
 131 0070 23382109 		sd	s2,144(sp)
 132              		.cfi_offset 1, -8
 133              		.cfi_offset 8, -16
 134              		.cfi_offset 9, -24
 135              		.cfi_offset 18, -32
 136 0074 1304010B 		addi	s0,sp,176
 137              		.cfi_def_cfa 8, 0
  22:src/riscv.cpp **** 
  23:src/riscv.cpp **** //    uint64 arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7;
  24:src/riscv.cpp ****     uint64 args[8];
 138              		.loc 1 24 5
  25:src/riscv.cpp ****     __asm__ volatile("mv %[arg0], a0" : [arg0]"=r"(*args)); // za kod sistemskog poziva
 139              		.loc 1 25 5
 140              		.loc 1 25 59 is_stmt 0
 141              	#APP
 142              	# 25 "src/riscv.cpp" 1
  26              	    __asm__ volatile("mv %[arg1], a1" : [arg1]"=r"(*(args + 1))); // argumenti s leva na desno
 143              		mv a5, a0
 144              	# 0 "" 2
 145              	#NO_APP
GAS LISTING /tmp/ccSTET18.s 			page 7


 146 007c 2330F4FA 		sd	a5,-96(s0)
 147              		.loc 1 26 5 is_stmt 1
 148              		.loc 1 26 65 is_stmt 0
 149              	#APP
 150              	# 26 "src/riscv.cpp" 1
  27              	    __asm__ volatile("mv %[arg2], a2" : [arg2]"=r"(*(args + 2)));
 151              		mv a5, a1
 152              	# 0 "" 2
 153              	#NO_APP
 154 0084 2334F4FA 		sd	a5,-88(s0)
 155              		.loc 1 27 5 is_stmt 1
 156              		.loc 1 27 65 is_stmt 0
 157              	#APP
 158              	# 27 "src/riscv.cpp" 1
  28              	    __asm__ volatile("mv %[arg3], a3" : [arg3]"=r"(*(args + 3)));
 159              		mv a5, a2
 160              	# 0 "" 2
 161              	#NO_APP
 162 008c 2338F4FA 		sd	a5,-80(s0)
 163              		.loc 1 28 5 is_stmt 1
 164              		.loc 1 28 65 is_stmt 0
 165              	#APP
 166              	# 28 "src/riscv.cpp" 1
  29              	    __asm__ volatile("mv %[arg4], a4" : [arg4]"=r"(*(args + 4)));
 167              		mv a5, a3
 168              	# 0 "" 2
 169              	#NO_APP
 170 0094 233CF4FA 		sd	a5,-72(s0)
 171              		.loc 1 29 5 is_stmt 1
 172              		.loc 1 29 65 is_stmt 0
 173              	#APP
 174              	# 29 "src/riscv.cpp" 1
  30              	    __asm__ volatile("mv %[arg5], a5" : [arg5]"=r"(*(args + 5)));
 175              		mv a5, a4
 176              	# 0 "" 2
 177              	#NO_APP
 178 009c 2330F4FC 		sd	a5,-64(s0)
 179              		.loc 1 30 5 is_stmt 1
 180              		.loc 1 30 65 is_stmt 0
 181              	#APP
 182              	# 30 "src/riscv.cpp" 1
  31              	    __asm__ volatile("mv %[arg6], a6" : [arg6]"=r"(*(args + 6)));
 183              		mv a5, a5
 184              	# 0 "" 2
 185              	#NO_APP
 186 00a4 2334F4FC 		sd	a5,-56(s0)
 187              		.loc 1 31 5 is_stmt 1
 188              		.loc 1 31 65 is_stmt 0
 189              	#APP
 190              	# 31 "src/riscv.cpp" 1
  32              	    __asm__ volatile("mv %[arg7], a7" : [arg7]"=r"(*(args + 7)));
 191              		mv a5, a6
 192              	# 0 "" 2
 193              	#NO_APP
 194 00ac 2338F4FC 		sd	a5,-48(s0)
 195              		.loc 1 32 5 is_stmt 1
 196              		.loc 1 32 65 is_stmt 0
GAS LISTING /tmp/ccSTET18.s 			page 8


 197              	#APP
 198              	# 32 "src/riscv.cpp" 1
  33              	
 199              		mv a5, a7
 200              	# 0 "" 2
 201              	#NO_APP
 202 00b4 233CF4FC 		sd	a5,-40(s0)
  34:src/riscv.cpp ****     uint64 scause = r_scause();
 203              		.loc 1 34 5 is_stmt 1
 204              	.LBB146:
 205              	.LBB147:
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 206              		.loc 2 100 5
 101:src/../h/riscv.hpp ****     return scause;
 207              		.loc 2 101 5
 101:src/../h/riscv.hpp ****     return scause;
 208              		.loc 2 101 72 is_stmt 0
 209              	#APP
 210              	# 101 "src/../h/riscv.hpp" 1
 211              		csrr a5, scause
 212              	# 0 "" 2
 213              	#NO_APP
 214 00bc 233CF4F6 		sd	a5,-136(s0)
 102:src/../h/riscv.hpp **** }
 215              		.loc 2 102 5 is_stmt 1
 102:src/../h/riscv.hpp **** }
 216              		.loc 2 102 12 is_stmt 0
 217 00c0 033784F7 		ld	a4,-136(s0)
 218              	.LVL4:
 219              	.LBE147:
 220              	.LBE146:
  35:src/riscv.cpp **** 
  36:src/riscv.cpp ****     if (scause == 0x8000000000000001UL){
 221              		.loc 1 36 5 is_stmt 1
 222              	.LBB148:
 223 00c4 9307F0FF 		li	a5,-1
 224 00c8 9397F703 		slli	a5,a5,63
 225 00cc 93871700 		addi	a5,a5,1
 226 00d0 630CF702 		beq	a4,a5,.L47
 227              	.LBE148:
  37:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  38:src/riscv.cpp **** 
  39:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  40:src/riscv.cpp ****         TCB::time_slice_counter++;
  41:src/riscv.cpp ****         TS::decrement_and_remove();
  42:src/riscv.cpp ****         if (TCB::time_slice_counter >= TCB::running->get_time_slice()) {
  43:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
  44:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
  45:src/riscv.cpp ****             TCB::time_slice_counter = 0;
  46:src/riscv.cpp ****             TCB::thread_dispatch();
  47:src/riscv.cpp ****             w_sstatus(sstatus);
  48:src/riscv.cpp ****             w_sepc(sepc);
  49:src/riscv.cpp ****         }
  50:src/riscv.cpp **** 
  51:src/riscv.cpp ****     }
  52:src/riscv.cpp ****     else if(scause == 0x0000000000000009UL || scause == 0x0000000000000008UL){
 228              		.loc 1 52 10
GAS LISTING /tmp/ccSTET18.s 			page 9


 229              	.LBB228:
 230              	.LBB149:
 231              		.loc 1 52 44 is_stmt 0
 232 00d4 930787FF 		addi	a5,a4,-8
 233              		.loc 1 52 10
 234 00d8 93061000 		li	a3,1
 235 00dc 63F4F60A 		bleu	a5,a3,.L48
 236              	.LBE149:
 237              	.LBE228:
  53:src/riscv.cpp ****         uint64 retVal = 0;
  54:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  55:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  56:src/riscv.cpp ****             // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer inte
  57:src/riscv.cpp ****             switch(*args){
  58:src/riscv.cpp ****                 case 0x01:
  59:src/riscv.cpp ****                     retVal = (uint64)(MemoryAllocator::getInstance().memory_alloc(*(args + 1)));
  60:src/riscv.cpp ****                     break;
  61:src/riscv.cpp ****                 case 0x02:
  62:src/riscv.cpp ****                     retVal = (uint64)(MemoryAllocator::getInstance().memory_free((void*)*(args + 1)
  63:src/riscv.cpp ****                     break;
  64:src/riscv.cpp ****                 case 0x11:
  65:src/riscv.cpp ****                     retVal = (uint64)(TCB::thread_create((TCB**)*(args + 1),
  66:src/riscv.cpp ****                                                          (void(*)(void*))*(args + 2),
  67:src/riscv.cpp ****                                                          (void*)*(args + 3),
  68:src/riscv.cpp ****                                                          (void*)*(args + 4),
  69:src/riscv.cpp ****                                                          (void*)*(args + 6)
  70:src/riscv.cpp ****                                                          ));
  71:src/riscv.cpp ****                     break;
  72:src/riscv.cpp ****                 case 0x12:
  73:src/riscv.cpp ****                     retVal = TCB::thread_exit();
  74:src/riscv.cpp ****                     break;
  75:src/riscv.cpp ****                 case 0x13:
  76:src/riscv.cpp ****                     TCB::thread_dispatch();
  77:src/riscv.cpp ****                     break;
  78:src/riscv.cpp ****                 case 0x21:
  79:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_open((MySemaphore**)*(args + 1),
  80:src/riscv.cpp ****                                                           (uint64)*(args + 2)
  81:src/riscv.cpp ****                                                           ));
  82:src/riscv.cpp ****                     break;
  83:src/riscv.cpp ****                 case 0x22:
  84:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_close((MySemaphore*)*(args + 1)));
  85:src/riscv.cpp ****                     break;
  86:src/riscv.cpp ****                 case 0x23:
  87:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_wait((MySemaphore*)*(args + 1)));
  88:src/riscv.cpp ****                     break;
  89:src/riscv.cpp ****                 case 0x24:
  90:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_signal((MySemaphore*)*(args + 1)));
  91:src/riscv.cpp ****                     break;
  92:src/riscv.cpp ****                 case 0x31:
  93:src/riscv.cpp ****                     TCB::time_sleep(*(args + 1));
  94:src/riscv.cpp ****                     break;
  95:src/riscv.cpp ****                 case 0x41:
  96:src/riscv.cpp ****                     retVal = Console::getInstance().get_from_input();
  97:src/riscv.cpp ****                     break;
  98:src/riscv.cpp ****                 case 0x42:
  99:src/riscv.cpp ****                     Console::getInstance().put_in_output((char)*(args + 1));
 100:src/riscv.cpp ****                     break;
GAS LISTING /tmp/ccSTET18.s 			page 10


 101:src/riscv.cpp ****                 case 0x50:
 102:src/riscv.cpp ****                     Scheduler::getInstance().put((TCB*)*(args + 1));
 103:src/riscv.cpp ****                     break;
 104:src/riscv.cpp ****                 case 0x60:
 105:src/riscv.cpp ****                     Riscv::switch_to_user();
 106:src/riscv.cpp ****                     break;
 107:src/riscv.cpp ****                 case 0x61:
 108:src/riscv.cpp ****                     Riscv::switch_to_priviledged();
 109:src/riscv.cpp ****                     break;
 110:src/riscv.cpp ****                 case 0x70:
 111:src/riscv.cpp ****                     ((TCB*)*(args + 1))->set_periodic(true);
 112:src/riscv.cpp ****                 case 0x111:
 113:src/riscv.cpp ****                     ((TCB*)*(args + 1))->set_finished(true);
 114:src/riscv.cpp ****                 default:
 115:src/riscv.cpp ****                     retVal = 0;
 116:src/riscv.cpp ****                     break;
 117:src/riscv.cpp ****             }
 118:src/riscv.cpp ****             // postavljamo novu povratnu vrednost za a0
 119:src/riscv.cpp ****             __asm__ volatile("mv a0, %[ret]" : : [ret]"r"(retVal));
 120:src/riscv.cpp ****             __asm__ volatile("sd a0, 10 * 8(s0)");
 121:src/riscv.cpp **** 
 122:src/riscv.cpp ****             // pomeramo pc za 4 bajta unapred
 123:src/riscv.cpp ****             w_sepc(sepc);
 124:src/riscv.cpp ****             if(*args != 0x60 && *args != 0x61)
 125:src/riscv.cpp ****                 w_sstatus(sstatus);
 126:src/riscv.cpp ****     }
 127:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 238              		.loc 1 127 10 is_stmt 1
 239              	.LBB229:
 240              	.LBB210:
 241              	.LBB150:
 242 00e0 9307F0FF 		li	a5,-1
 243 00e4 9397F703 		slli	a5,a5,63
 244 00e8 93879700 		addi	a5,a5,9
 245 00ec 6302F740 		beq	a4,a5,.L49
 246              	.LVL5:
 247              	.L7:
 248              	.LBE150:
 249              	.LBE210:
 250              	.LBE229:
 128:src/riscv.cpp ****     {
 129:src/riscv.cpp ****         int irq = plic_claim();
 130:src/riscv.cpp ****         if(irq == CONSOLE_IRQ){
 131:src/riscv.cpp ****             // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
 132:src/riscv.cpp ****             while(*((char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT){
 133:src/riscv.cpp ****                 Console::getInstance().put_in_input(*((char*)CONSOLE_RX_DATA));
 134:src/riscv.cpp ****                 if(*((char*)CONSOLE_RX_DATA) == 107){
 135:src/riscv.cpp ****                     TCB* tmp = periodicThread::getInstance().get();
 136:src/riscv.cpp ****                     tmp->set_finished(true);
 137:src/riscv.cpp ****                 }
 138:src/riscv.cpp ****             }
 139:src/riscv.cpp ****         }
 140:src/riscv.cpp ****         plic_complete(irq);
 141:src/riscv.cpp ****     }
 142:src/riscv.cpp ****     else{
 143:src/riscv.cpp ****         // unexpected trap cause
 144:src/riscv.cpp ****         // print scause
GAS LISTING /tmp/ccSTET18.s 			page 11


 145:src/riscv.cpp ****         // print sepc
 146:src/riscv.cpp ****         // print stval
 147:src/riscv.cpp ****     }
 148:src/riscv.cpp **** }...
 251              		.loc 1 148 1 is_stmt 0
 252 00f0 8330810A 		ld	ra,168(sp)
 253              		.cfi_remember_state
 254              		.cfi_restore 1
 255 00f4 0334010A 		ld	s0,160(sp)
 256              		.cfi_restore 8
 257              		.cfi_def_cfa 2, 176
 258 00f8 83348109 		ld	s1,152(sp)
 259              		.cfi_restore 9
 260 00fc 03390109 		ld	s2,144(sp)
 261              		.cfi_restore 18
 262 0100 1301010B 		addi	sp,sp,176
 263              		.cfi_def_cfa_offset 0
 264 0104 67800000 		jr	ra
 265              	.LVL6:
 266              	.L47:
 267              		.cfi_restore_state
 268              	.LBB230:
 269              	.LBB211:
  37:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 270              		.loc 1 37 9 is_stmt 1
 271              	.LBB212:
 272              	.LBB213:
 153:src/../h/riscv.hpp **** }
 273              		.loc 2 153 5
 153:src/../h/riscv.hpp **** }
 274              		.loc 2 153 64 is_stmt 0
 275 0108 93072000 		li	a5,2
 276              	#APP
 277              	# 153 "src/../h/riscv.hpp" 1
 278              		csrc sip, a5
 279              	# 0 "" 2
 280              	.LVL7:
 281              	#NO_APP
 282              	.LBE213:
 283              	.LBE212:
  40:src/riscv.cpp ****         TCB::time_slice_counter++;
 284              		.loc 1 40 9 is_stmt 1
  40:src/riscv.cpp ****         TCB::time_slice_counter++;
 285              		.loc 1 40 32 is_stmt 0
 286 0110 97040000 		la	s1,_ZN3TCB18time_slice_counterE
 286      83B40400 
 287 0118 83B70400 		ld	a5,0(s1)
 288 011c 93871700 		addi	a5,a5,1
 289 0120 23B0F400 		sd	a5,0(s1)
  41:src/riscv.cpp ****         TS::decrement_and_remove();
 290              		.loc 1 41 9 is_stmt 1
  41:src/riscv.cpp ****         TS::decrement_and_remove();
 291              		.loc 1 41 33 is_stmt 0
 292 0124 97000000 		call	_ZN2TS20decrement_and_removeEv@plt
 292      E7800000 
 293              	.LVL8:
  42:src/riscv.cpp ****         if (TCB::time_slice_counter >= TCB::running->get_time_slice()) {
GAS LISTING /tmp/ccSTET18.s 			page 12


 294              		.loc 1 42 9 is_stmt 1
 295              	.LBB214:
  42:src/riscv.cpp ****         if (TCB::time_slice_counter >= TCB::running->get_time_slice()) {
 296              		.loc 1 42 68 is_stmt 0
 297 012c 97070000 		la	a5,_ZN3TCB7runningE
 297      83B70700 
 298 0134 83B70700 		ld	a5,0(a5)
 299              	.LVL9:
 300              	.LBB215:
 301              	.LBB216:
 302              		.file 3 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** #ifndef _thread_hpp_
   2:src/../h/TCB.hpp **** #define _thread_hpp_
   3:src/../h/TCB.hpp **** 
   4:src/../h/TCB.hpp **** #include "../lib/hw.h"
   5:src/../h/TCB.hpp **** #include "../h/scheduler.hpp"
   6:src/../h/TCB.hpp **** #include "../h/MemoryAllocator.hpp"
   7:src/../h/TCB.hpp **** #include "../h/TS.hpp"
   8:src/../h/TCB.hpp **** #include "../h/periodic_threads.hpp"
   9:src/../h/TCB.hpp **** 
  10:src/../h/TCB.hpp **** class TCB{
  11:src/../h/TCB.hpp **** public:
  12:src/../h/TCB.hpp **** 
  13:src/../h/TCB.hpp ****     ~TCB(){
  14:src/../h/TCB.hpp ****         MemoryAllocator::getInstance().memory_free((void*)stack);
  15:src/../h/TCB.hpp ****     }
  16:src/../h/TCB.hpp **** 
  17:src/../h/TCB.hpp ****     using Body = void (*)(void*);
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp ****     // trazene
  20:src/../h/TCB.hpp ****     static int thread_create(
  21:src/../h/TCB.hpp ****         TCB** handle,
  22:src/../h/TCB.hpp ****         void(*start_routine)(void*),
  23:src/../h/TCB.hpp ****         void* arg,
  24:src/../h/TCB.hpp ****         void* stack_space,
  25:src/../h/TCB.hpp ****         bool flag
  26:src/../h/TCB.hpp ****     );
  27:src/../h/TCB.hpp **** 
  28:src/../h/TCB.hpp ****     static int thread_exit();
  29:src/../h/TCB.hpp **** 
  30:src/../h/TCB.hpp ****     static void thread_dispatch();
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp ****     static int time_sleep(uint64 time);
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp ****     // getteri i setteri
  35:src/../h/TCB.hpp ****     void set_finished(bool f){ this->finished = f; }
  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     bool is_finished()const{return finished;}
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     void set_next_scheduler(TCB* nextThread){ next_scheduler = nextThread; }
  40:src/../h/TCB.hpp **** 
  41:src/../h/TCB.hpp ****     TCB* get_next_scheduler()const{ return next_scheduler; }
  42:src/../h/TCB.hpp **** 
  43:src/../h/TCB.hpp ****     void set_next_sleep(TCB* nextThread){ next_sleep = nextThread; }
  44:src/../h/TCB.hpp **** 
  45:src/../h/TCB.hpp ****     TCB* get_next_sleep()const{ return next_sleep; }
  46:src/../h/TCB.hpp **** 
GAS LISTING /tmp/ccSTET18.s 			page 13


  47:src/../h/TCB.hpp ****     void set_next_blocked(TCB* nextThread){ next_blocked = nextThread; }
  48:src/../h/TCB.hpp **** 
  49:src/../h/TCB.hpp ****     TCB* get_next_blocked()const{ return next_blocked; }
  50:src/../h/TCB.hpp **** 
  51:src/../h/TCB.hpp ****     uint64 get_thread_id()const{ return id; }
  52:src/../h/TCB.hpp **** 
  53:src/../h/TCB.hpp ****     uint64 get_time_sleep()const{ return sleep; }
  54:src/../h/TCB.hpp **** 
  55:src/../h/TCB.hpp ****     void set_time_sleep(uint64 new_time){ sleep = new_time; }
  56:src/../h/TCB.hpp **** 
  57:src/../h/TCB.hpp ****     uint64 get_time_slice()const{ return time_slice; }
 303              		.loc 3 57 35 is_stmt 1
 304              		.loc 3 57 42 is_stmt 0
 305 0138 83B70705 		ld	a5,80(a5)
 306              	.LVL10:
 307              	.LBE216:
 308              	.LBE215:
  42:src/riscv.cpp ****         if (TCB::time_slice_counter >= TCB::running->get_time_slice()) {
 309              		.loc 1 42 37
 310 013c 03B70400 		ld	a4,0(s1)
  42:src/riscv.cpp ****         if (TCB::time_slice_counter >= TCB::running->get_time_slice()) {
 311              		.loc 1 42 9
 312 0140 E368F7FA 		bltu	a4,a5,.L7
 313              	.LBB217:
  43:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 314              		.loc 1 43 13 is_stmt 1
 315              	.LBB218:
 316              	.LBB219:
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 317              		.loc 2 112 5
 113:src/../h/riscv.hpp ****     return sepc;
 318              		.loc 2 113 5
 113:src/../h/riscv.hpp ****     return sepc;
 319              		.loc 2 113 64 is_stmt 0
 320              	#APP
 321              	# 113 "src/../h/riscv.hpp" 1
 322              		csrr a5, sepc
 323              	# 0 "" 2
 324              	#NO_APP
 325 0148 2334F4F8 		sd	a5,-120(s0)
 114:src/../h/riscv.hpp **** }
 326              		.loc 2 114 5 is_stmt 1
 114:src/../h/riscv.hpp **** }
 327              		.loc 2 114 12 is_stmt 0
 328 014c 833784F8 		ld	a5,-120(s0)
 329              	.LBE219:
 330              	.LBE218:
  43:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 331              		.loc 1 43 43
 332 0150 233CF4F4 		sd	a5,-168(s0)
  44:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 333              		.loc 1 44 13 is_stmt 1
 334              	.LBB220:
 335              	.LBB221:
 177:src/../h/riscv.hpp **** 
 178:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 179:src/../h/riscv.hpp **** {
GAS LISTING /tmp/ccSTET18.s 			page 14


 180:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 336              		.loc 2 180 5
 181:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 337              		.loc 2 181 5
 338              		.loc 2 181 76 is_stmt 0
 339              	#APP
 340              	# 181 "src/../h/riscv.hpp" 1
 182              	    return sstatus;
 341              		csrr a5, sstatus
 342              	# 0 "" 2
 343              	#NO_APP
 344 0158 2330F4F8 		sd	a5,-128(s0)
 345              		.loc 2 182 5 is_stmt 1
 346              		.loc 2 182 12 is_stmt 0
 347 015c 833704F8 		ld	a5,-128(s0)
 348              	.LBE221:
 349              	.LBE220:
  44:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 350              		.loc 1 44 49
 351 0160 2330F4F6 		sd	a5,-160(s0)
  45:src/riscv.cpp ****             TCB::time_slice_counter = 0;
 352              		.loc 1 45 13 is_stmt 1
  45:src/riscv.cpp ****             TCB::time_slice_counter = 0;
 353              		.loc 1 45 37 is_stmt 0
 354 0164 23B00400 		sd	zero,0(s1)
  46:src/riscv.cpp ****             TCB::thread_dispatch();
 355              		.loc 1 46 13 is_stmt 1
  46:src/riscv.cpp ****             TCB::thread_dispatch();
 356              		.loc 1 46 33 is_stmt 0
 357 0168 97000000 		call	_ZN3TCB15thread_dispatchEv@plt
 357      E7800000 
 358              	.LVL11:
  47:src/riscv.cpp ****             w_sstatus(sstatus);
 359              		.loc 1 47 13 is_stmt 1
  47:src/riscv.cpp ****             w_sstatus(sstatus);
 360              		.loc 1 47 22 is_stmt 0
 361 0170 833704F6 		ld	a5,-160(s0)
 362              	.LVL12:
 363              	.LBB222:
 364              	.LBB223:
 183:src/../h/riscv.hpp **** }
 184:src/../h/riscv.hpp **** 
 185:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 186:src/../h/riscv.hpp **** {
 187:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 365              		.loc 2 187 5 is_stmt 1
 366              		.loc 2 187 77 is_stmt 0
 367              	#APP
 368              	# 187 "src/../h/riscv.hpp" 1
 188              	}
 369              		csrw sstatus, a5
 370              	# 0 "" 2
 371              	.LVL13:
 372              	#NO_APP
 373              	.LBE223:
 374              	.LBE222:
  48:src/riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/ccSTET18.s 			page 15


 375              		.loc 1 48 13 is_stmt 1
  48:src/riscv.cpp ****             w_sepc(sepc);
 376              		.loc 1 48 19 is_stmt 0
 377 0178 833784F5 		ld	a5,-168(s0)
 378              	.LVL14:
 379              	.LBB224:
 380              	.LBB225:
 119:src/../h/riscv.hpp **** }
 381              		.loc 2 119 5 is_stmt 1
 119:src/../h/riscv.hpp **** }
 382              		.loc 2 119 65 is_stmt 0
 383              	#APP
 384              	# 119 "src/../h/riscv.hpp" 1
 120:src/../h/riscv.hpp **** 
 385              		csrw sepc, a5
 386              	# 0 "" 2
 387              		.loc 2 120 1
 388              	#NO_APP
 389 0180 6FF01FF7 		j	.L7
 390              	.LVL15:
 391              	.L48:
 392              	.LBE225:
 393              	.LBE224:
 394              	.LBE217:
 395              	.LBE214:
 396              	.LBE211:
 397              	.LBB226:
 398              	.LBB169:
  53:src/riscv.cpp ****         uint64 retVal = 0;
 399              		.loc 1 53 9 is_stmt 1
  54:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 400              		.loc 1 54 9
 401              	.LBB170:
 402              	.LBB171:
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 403              		.loc 2 112 5
 113:src/../h/riscv.hpp ****     return sepc;
 404              		.loc 2 113 5
 113:src/../h/riscv.hpp ****     return sepc;
 405              		.loc 2 113 64 is_stmt 0
 406              	#APP
 407              	# 113 "src/../h/riscv.hpp" 1
 408              		csrr a5, sepc
 409              	# 0 "" 2
 410              	#NO_APP
 411 0188 233CF4F8 		sd	a5,-104(s0)
 114:src/../h/riscv.hpp **** }
 412              		.loc 2 114 5 is_stmt 1
 114:src/../h/riscv.hpp **** }
 413              		.loc 2 114 12 is_stmt 0
 414 018c 833784F9 		ld	a5,-104(s0)
 415              	.LBE171:
 416              	.LBE170:
  54:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 417              		.loc 1 54 41
 418 0190 93874700 		addi	a5,a5,4
  54:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
GAS LISTING /tmp/ccSTET18.s 			page 16


 419              		.loc 1 54 43
 420 0194 2334F4F6 		sd	a5,-152(s0)
  55:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 421              		.loc 1 55 9 is_stmt 1
 422              	.LBB172:
 423              	.LBB173:
 180:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 424              		.loc 2 180 5
 181:src/../h/riscv.hpp ****     return sstatus;
 425              		.loc 2 181 5
 181:src/../h/riscv.hpp ****     return sstatus;
 426              		.loc 2 181 76 is_stmt 0
 427              	#APP
 428              	# 181 "src/../h/riscv.hpp" 1
 429              		csrr a5, sstatus
 430              	# 0 "" 2
 431              	#NO_APP
 432 019c 2338F4F8 		sd	a5,-112(s0)
 182:src/../h/riscv.hpp **** }
 433              		.loc 2 182 5 is_stmt 1
 182:src/../h/riscv.hpp **** }
 434              		.loc 2 182 12 is_stmt 0
 435 01a0 833704F9 		ld	a5,-112(s0)
 436              	.LBE173:
 437              	.LBE172:
  55:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 438              		.loc 1 55 45
 439 01a4 2338F4F6 		sd	a5,-144(s0)
  57:src/riscv.cpp ****             switch(*args){
 440              		.loc 1 57 13 is_stmt 1
  57:src/riscv.cpp ****             switch(*args){
 441              		.loc 1 57 20 is_stmt 0
 442 01a8 833704FA 		ld	a5,-96(s0)
  57:src/riscv.cpp ****             switch(*args){
 443              		.loc 1 57 13
 444 01ac 13070007 		li	a4,112
 445              	.LVL16:
 446 01b0 6364F702 		bgtu	a5,a4,.L11
 447 01b4 63860732 		beqz	a5,.L44
 448 01b8 6368F732 		bgtu	a5,a4,.L45
 449 01bc 93972700 		slli	a5,a5,2
 450 01c0 17070000 		lla	a4,.L14
 450      13070700 
 451 01c8 B387E700 		add	a5,a5,a4
 452 01cc 83A70700 		lw	a5,0(a5)
 453 01d0 B387E700 		add	a5,a5,a4
 454 01d4 67800700 		jr	a5
 455              		.section	.rodata
 456              		.align	2
 457              		.align	2
 458              	.L14:
 459 0000 00000000 		.word	.L45-.L14
 460 0004 00000000 		.word	.L29-.L14
 461 0008 00000000 		.word	.L28-.L14
 462 000c 00000000 		.word	.L45-.L14
 463 0010 00000000 		.word	.L45-.L14
 464 0014 00000000 		.word	.L45-.L14
GAS LISTING /tmp/ccSTET18.s 			page 17


 465 0018 00000000 		.word	.L45-.L14
 466 001c 00000000 		.word	.L45-.L14
 467 0020 00000000 		.word	.L45-.L14
 468 0024 00000000 		.word	.L45-.L14
 469 0028 00000000 		.word	.L45-.L14
 470 002c 00000000 		.word	.L45-.L14
 471 0030 00000000 		.word	.L45-.L14
 472 0034 00000000 		.word	.L45-.L14
 473 0038 00000000 		.word	.L45-.L14
 474 003c 00000000 		.word	.L45-.L14
 475 0040 00000000 		.word	.L45-.L14
 476 0044 00000000 		.word	.L27-.L14
 477 0048 00000000 		.word	.L26-.L14
 478 004c 00000000 		.word	.L25-.L14
 479 0050 00000000 		.word	.L45-.L14
 480 0054 00000000 		.word	.L45-.L14
 481 0058 00000000 		.word	.L45-.L14
 482 005c 00000000 		.word	.L45-.L14
 483 0060 00000000 		.word	.L45-.L14
 484 0064 00000000 		.word	.L45-.L14
 485 0068 00000000 		.word	.L45-.L14
 486 006c 00000000 		.word	.L45-.L14
 487 0070 00000000 		.word	.L45-.L14
 488 0074 00000000 		.word	.L45-.L14
 489 0078 00000000 		.word	.L45-.L14
 490 007c 00000000 		.word	.L45-.L14
 491 0080 00000000 		.word	.L45-.L14
 492 0084 00000000 		.word	.L24-.L14
 493 0088 00000000 		.word	.L23-.L14
 494 008c 00000000 		.word	.L22-.L14
 495 0090 00000000 		.word	.L21-.L14
 496 0094 00000000 		.word	.L45-.L14
 497 0098 00000000 		.word	.L45-.L14
 498 009c 00000000 		.word	.L45-.L14
 499 00a0 00000000 		.word	.L45-.L14
 500 00a4 00000000 		.word	.L45-.L14
 501 00a8 00000000 		.word	.L45-.L14
 502 00ac 00000000 		.word	.L45-.L14
 503 00b0 00000000 		.word	.L45-.L14
 504 00b4 00000000 		.word	.L45-.L14
 505 00b8 00000000 		.word	.L45-.L14
 506 00bc 00000000 		.word	.L45-.L14
 507 00c0 00000000 		.word	.L45-.L14
 508 00c4 00000000 		.word	.L20-.L14
 509 00c8 00000000 		.word	.L45-.L14
 510 00cc 00000000 		.word	.L45-.L14
 511 00d0 00000000 		.word	.L45-.L14
 512 00d4 00000000 		.word	.L45-.L14
 513 00d8 00000000 		.word	.L45-.L14
 514 00dc 00000000 		.word	.L45-.L14
 515 00e0 00000000 		.word	.L45-.L14
 516 00e4 00000000 		.word	.L45-.L14
 517 00e8 00000000 		.word	.L45-.L14
 518 00ec 00000000 		.word	.L45-.L14
 519 00f0 00000000 		.word	.L45-.L14
 520 00f4 00000000 		.word	.L45-.L14
 521 00f8 00000000 		.word	.L45-.L14
GAS LISTING /tmp/ccSTET18.s 			page 18


 522 00fc 00000000 		.word	.L45-.L14
 523 0100 00000000 		.word	.L45-.L14
 524 0104 00000000 		.word	.L19-.L14
 525 0108 00000000 		.word	.L18-.L14
 526 010c 00000000 		.word	.L45-.L14
 527 0110 00000000 		.word	.L45-.L14
 528 0114 00000000 		.word	.L45-.L14
 529 0118 00000000 		.word	.L45-.L14
 530 011c 00000000 		.word	.L45-.L14
 531 0120 00000000 		.word	.L45-.L14
 532 0124 00000000 		.word	.L45-.L14
 533 0128 00000000 		.word	.L45-.L14
 534 012c 00000000 		.word	.L45-.L14
 535 0130 00000000 		.word	.L45-.L14
 536 0134 00000000 		.word	.L45-.L14
 537 0138 00000000 		.word	.L45-.L14
 538 013c 00000000 		.word	.L45-.L14
 539 0140 00000000 		.word	.L17-.L14
 540 0144 00000000 		.word	.L45-.L14
 541 0148 00000000 		.word	.L45-.L14
 542 014c 00000000 		.word	.L45-.L14
 543 0150 00000000 		.word	.L45-.L14
 544 0154 00000000 		.word	.L45-.L14
 545 0158 00000000 		.word	.L45-.L14
 546 015c 00000000 		.word	.L45-.L14
 547 0160 00000000 		.word	.L45-.L14
 548 0164 00000000 		.word	.L45-.L14
 549 0168 00000000 		.word	.L45-.L14
 550 016c 00000000 		.word	.L45-.L14
 551 0170 00000000 		.word	.L45-.L14
 552 0174 00000000 		.word	.L45-.L14
 553 0178 00000000 		.word	.L45-.L14
 554 017c 00000000 		.word	.L45-.L14
 555 0180 00000000 		.word	.L16-.L14
 556 0184 00000000 		.word	.L15-.L14
 557 0188 00000000 		.word	.L45-.L14
 558 018c 00000000 		.word	.L45-.L14
 559 0190 00000000 		.word	.L45-.L14
 560 0194 00000000 		.word	.L45-.L14
 561 0198 00000000 		.word	.L45-.L14
 562 019c 00000000 		.word	.L45-.L14
 563 01a0 00000000 		.word	.L45-.L14
 564 01a4 00000000 		.word	.L45-.L14
 565 01a8 00000000 		.word	.L45-.L14
 566 01ac 00000000 		.word	.L45-.L14
 567 01b0 00000000 		.word	.L45-.L14
 568 01b4 00000000 		.word	.L45-.L14
 569 01b8 00000000 		.word	.L45-.L14
 570 01bc 00000000 		.word	.L45-.L14
 571 01c0 00000000 		.word	.L13-.L14
 572              		.text
 573              	.L11:
 574 01d8 13071011 		li	a4,273
 575 01dc 639CE700 		bne	a5,a4,.L50
 576              	.L30:
 112:src/riscv.cpp ****                 case 0x111:
 577              		.loc 1 112 17 is_stmt 1
GAS LISTING /tmp/ccSTET18.s 			page 19


 113:src/riscv.cpp ****                     ((TCB*)*(args + 1))->set_finished(true);
 578              		.loc 1 113 21
 579              	.LVL17:
 580              	.LBB174:
 581              	.LBB175:
  35:src/../h/TCB.hpp **** 
 582              		.loc 3 35 32
  35:src/../h/TCB.hpp **** 
 583              		.loc 3 35 47 is_stmt 0
 584 01e0 833784FA 		ld	a5,-88(s0)
 585 01e4 13071000 		li	a4,1
 586 01e8 2384E702 		sb	a4,40(a5)
 587              	.LBE175:
 588              	.LBE174:
 115:src/riscv.cpp ****                     retVal = 0;
 589              		.loc 1 115 28
 590 01ec 13050000 		li	a0,0
 591              	.LBB177:
 592              	.LBB176:
  35:src/../h/TCB.hpp **** 
 593              		.loc 3 35 52
 594 01f0 6F008000 		j	.L12
 595              	.LVL18:
 596              	.L50:
 597              	.LBE176:
 598              	.LBE177:
  57:src/riscv.cpp ****             switch(*args){
 599              		.loc 1 57 13
 600 01f4 13050000 		li	a0,0
 601              	.LVL19:
 602              	.L12:
 119:src/riscv.cpp ****             __asm__ volatile("mv a0, %[ret]" : : [ret]"r"(retVal));
 603              		.loc 1 119 13 is_stmt 1
 119:src/riscv.cpp ****             __asm__ volatile("mv a0, %[ret]" : : [ret]"r"(retVal));
 604              		.loc 1 119 67 is_stmt 0
 605              	#APP
 606              	# 119 "src/riscv.cpp" 1
 120:src/riscv.cpp ****             __asm__ volatile("sd a0, 10 * 8(s0)");
 607              		mv a0, a0
 608              	# 0 "" 2
 609              		.loc 1 120 13 is_stmt 1
 120:src/riscv.cpp ****             __asm__ volatile("sd a0, 10 * 8(s0)");
 610              		.loc 1 120 50 is_stmt 0
 611              	# 120 "src/riscv.cpp" 1
 123:src/riscv.cpp ****             w_sepc(sepc);
 612              		sd a0, 10 * 8(s0)
 613              	# 0 "" 2
 614              		.loc 1 123 13 is_stmt 1
 123:src/riscv.cpp ****             w_sepc(sepc);
 615              		.loc 1 123 19 is_stmt 0
 616              	#NO_APP
 617 0200 833784F6 		ld	a5,-152(s0)
 618              	.LVL20:
 619              	.LBB178:
 620              	.LBB179:
 119:src/../h/riscv.hpp **** }
 621              		.loc 2 119 5 is_stmt 1
GAS LISTING /tmp/ccSTET18.s 			page 20


 119:src/../h/riscv.hpp **** }
 622              		.loc 2 119 65 is_stmt 0
 623              	#APP
 624              	# 119 "src/../h/riscv.hpp" 1
 625              		csrw sepc, a5
 626              	# 0 "" 2
 627              	.LVL21:
 628              	#NO_APP
 629              	.LBE179:
 630              	.LBE178:
 124:src/riscv.cpp ****             if(*args != 0x60 && *args != 0x61)
 631              		.loc 1 124 13 is_stmt 1
 124:src/riscv.cpp ****             if(*args != 0x60 && *args != 0x61)
 632              		.loc 1 124 16 is_stmt 0
 633 0208 833704FA 		ld	a5,-96(s0)
 124:src/riscv.cpp ****             if(*args != 0x60 && *args != 0x61)
 634              		.loc 1 124 30
 635 020c 938707FA 		addi	a5,a5,-96
 124:src/riscv.cpp ****             if(*args != 0x60 && *args != 0x61)
 636              		.loc 1 124 13
 637 0210 13071000 		li	a4,1
 638 0214 E37EF7EC 		bleu	a5,a4,.L7
 125:src/riscv.cpp ****                 w_sstatus(sstatus);
 639              		.loc 1 125 17 is_stmt 1
 125:src/riscv.cpp ****                 w_sstatus(sstatus);
 640              		.loc 1 125 26 is_stmt 0
 641 0218 833704F7 		ld	a5,-144(s0)
 642              	.LVL22:
 643              	.LBB180:
 644              	.LBB181:
 187:src/../h/riscv.hpp **** }
 645              		.loc 2 187 5 is_stmt 1
 187:src/../h/riscv.hpp **** }
 646              		.loc 2 187 77 is_stmt 0
 647              	#APP
 648              	# 187 "src/../h/riscv.hpp" 1
 649              		csrw sstatus, a5
 650              	# 0 "" 2
 651              		.loc 2 188 1
 652              	#NO_APP
 653 0220 6FF01FED 		j	.L7
 654              	.LVL23:
 655              	.L29:
 656              	.LBE181:
 657              	.LBE180:
  58:src/riscv.cpp ****                 case 0x01:
 658              		.loc 1 58 17 is_stmt 1
  59:src/riscv.cpp ****                     retVal = (uint64)(MemoryAllocator::getInstance().memory_alloc(*(args + 1)));
 659              		.loc 1 59 21
 660              	.LBB182:
 661              	.LBB183:
 662              		.file 4 "src/../h/MemoryAllocator.hpp"
   1:src/../h/MemoryAllocator.hpp **** #ifndef _memory_allocator_hpp_
   2:src/../h/MemoryAllocator.hpp **** #define _memory_allocator_hpp_
   3:src/../h/MemoryAllocator.hpp **** 
   4:src/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   5:src/../h/MemoryAllocator.hpp **** 
GAS LISTING /tmp/ccSTET18.s 			page 21


   6:src/../h/MemoryAllocator.hpp **** class MemoryAllocator{
   7:src/../h/MemoryAllocator.hpp **** public:
   8:src/../h/MemoryAllocator.hpp **** 
   9:src/../h/MemoryAllocator.hpp ****     // dodaj instancu
  10:src/../h/MemoryAllocator.hpp ****     static MemoryAllocator& getInstance(){
  11:src/../h/MemoryAllocator.hpp ****         static MemoryAllocator instance;
 663              		.loc 4 11 9
 664              		.loc 4 11 32 is_stmt 0
 665 0224 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 665      83C70700 
 666 022c 639E0704 		bnez	a5,.L31
 667              	.LVL24:
 668              	.LBB184:
 669              	.LBB185:
 670              	.LBB186:
  12:src/../h/MemoryAllocator.hpp ****         return instance;
  13:src/../h/MemoryAllocator.hpp ****     }
  14:src/../h/MemoryAllocator.hpp **** 
  15:src/../h/MemoryAllocator.hpp ****     MemoryAllocator(const MemoryAllocator&) = delete;
  16:src/../h/MemoryAllocator.hpp ****     void operator=(MemoryAllocator const&) = delete;
  17:src/../h/MemoryAllocator.hpp **** 
  18:src/../h/MemoryAllocator.hpp ****     void* memory_alloc (size_t);
  19:src/../h/MemoryAllocator.hpp **** 
  20:src/../h/MemoryAllocator.hpp ****     int memory_free (void*);
  21:src/../h/MemoryAllocator.hpp **** 
  22:src/../h/MemoryAllocator.hpp **** private:
  23:src/../h/MemoryAllocator.hpp **** 
  24:src/../h/MemoryAllocator.hpp ****     struct FreeMem{
  25:src/../h/MemoryAllocator.hpp ****         size_t size;
  26:src/../h/MemoryAllocator.hpp ****         FreeMem* next;
  27:src/../h/MemoryAllocator.hpp ****         FreeMem* prev;
  28:src/../h/MemoryAllocator.hpp ****     };
  29:src/../h/MemoryAllocator.hpp **** 
  30:src/../h/MemoryAllocator.hpp ****     FreeMem* fmem_head = nullptr;
  31:src/../h/MemoryAllocator.hpp **** 
  32:src/../h/MemoryAllocator.hpp ****     MemoryAllocator(){
  33:src/../h/MemoryAllocator.hpp **** 
  34:src/../h/MemoryAllocator.hpp ****         size_t heapStart = (size_t)HEAP_START_ADDR;
 671              		.loc 4 34 9 is_stmt 1
 672              		.loc 4 34 16 is_stmt 0
 673 0230 97070000 		la	a5,HEAP_START_ADDR
 673      83B70700 
 674 0238 83B70700 		ld	a5,0(a5)
 675              	.LVL25:
  35:src/../h/MemoryAllocator.hpp ****         size_t heapEnd = (size_t)HEAP_END_ADDR - 1;
 676              		.loc 4 35 9 is_stmt 1
 677              		.loc 4 35 48 is_stmt 0
 678 023c 17070000 		la	a4,HEAP_END_ADDR
 678      03370700 
 679 0244 03370700 		ld	a4,0(a4)
 680              		.loc 4 35 16
 681 0248 1307F7FF 		addi	a4,a4,-1
 682              	.LVL26:
  36:src/../h/MemoryAllocator.hpp **** 
  37:src/../h/MemoryAllocator.hpp ****         size_t sizeInBlocks = (heapEnd - heapStart) / MEM_BLOCK_SIZE;
 683              		.loc 4 37 9 is_stmt 1
 684              		.loc 4 37 40 is_stmt 0
GAS LISTING /tmp/ccSTET18.s 			page 22


 685 024c 3307F740 		sub	a4,a4,a5
 686              	.LVL27:
 687              		.loc 4 37 16
 688 0250 13576700 		srli	a4,a4,6
 689              	.LVL28:
  38:src/../h/MemoryAllocator.hpp **** 
  39:src/../h/MemoryAllocator.hpp ****         // poravnaj na prvu krstenu adresu
  40:src/../h/MemoryAllocator.hpp ****         fmem_head = (FreeMem*)(heapStart + ((heapStart % MEM_BLOCK_SIZE != 0)?(MEM_BLOCK_SIZE - hea
 690              		.loc 4 40 9 is_stmt 1
 691              		.loc 4 40 56 is_stmt 0
 692 0254 93F6F703 		andi	a3,a5,63
 693              		.loc 4 40 78
 694 0258 63860600 		beqz	a3,.L32
 695 025c 13060004 		li	a2,64
 696 0260 B306D640 		sub	a3,a2,a3
 697              	.L32:
 698              		.loc 4 40 42
 699 0264 B387D700 		add	a5,a5,a3
 700              	.LVL29:
 701              		.loc 4 40 19
 702 0268 97060000 		sd	a5,_ZZN15MemoryAllocator11getInstanceEvE8instance,a3
 702      23B0F600 
  41:src/../h/MemoryAllocator.hpp **** 
  42:src/../h/MemoryAllocator.hpp ****         // napravi node
  43:src/../h/MemoryAllocator.hpp **** 
  44:src/../h/MemoryAllocator.hpp ****         fmem_head->next = nullptr;
 703              		.loc 4 44 9 is_stmt 1
 704              		.loc 4 44 25 is_stmt 0
 705 0270 23B40700 		sd	zero,8(a5)
  45:src/../h/MemoryAllocator.hpp ****         fmem_head->prev = nullptr;
 706              		.loc 4 45 9 is_stmt 1
 707              		.loc 4 45 25 is_stmt 0
 708 0274 23B80700 		sd	zero,16(a5)
  46:src/../h/MemoryAllocator.hpp ****         fmem_head->size = sizeInBlocks;
 709              		.loc 4 46 9 is_stmt 1
 710              		.loc 4 46 25 is_stmt 0
 711 0278 23B0E700 		sd	a4,0(a5)
 712              	.LVL30:
 713              	.LBE186:
 714              	.LBE185:
 715              	.LBE184:
  11:src/../h/MemoryAllocator.hpp ****         return instance;
 716              		.loc 4 11 32
 717 027c 93071000 		li	a5,1
 718 0280 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
 718      2300F700 
 719              	.L31:
  12:src/../h/MemoryAllocator.hpp ****     }
 720              		.loc 4 12 9 is_stmt 1
 721              	.LBE183:
 722              	.LBE182:
  59:src/riscv.cpp ****                     retVal = (uint64)(MemoryAllocator::getInstance().memory_alloc(*(args + 1)));
 723              		.loc 1 59 82 is_stmt 0
 724 0288 833584FA 		ld	a1,-88(s0)
 725 028c 17050000 		lla	a0,_ZZN15MemoryAllocator11getInstanceEvE8instance
 725      13050500 
 726 0294 97000000 		call	_ZN15MemoryAllocator12memory_allocEm@plt
GAS LISTING /tmp/ccSTET18.s 			page 23


 726      E7800000 
 727              	.LVL31:
  60:src/riscv.cpp ****                     break;
 728              		.loc 1 60 21 is_stmt 1
 729 029c 6FF0DFF5 		j	.L12
 730              	.LVL32:
 731              	.L28:
  61:src/riscv.cpp ****                 case 0x02:
 732              		.loc 1 61 17
  62:src/riscv.cpp ****                     retVal = (uint64)(MemoryAllocator::getInstance().memory_free((void*)*(args + 1)
 733              		.loc 1 62 21
 734              	.LBB187:
 735              	.LBB188:
  11:src/../h/MemoryAllocator.hpp ****         return instance;
 736              		.loc 4 11 9
  11:src/../h/MemoryAllocator.hpp ****         return instance;
 737              		.loc 4 11 32 is_stmt 0
 738 02a0 97070000 		lbu	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 738      83C70700 
 739 02a8 639E0704 		bnez	a5,.L33
 740              	.LVL33:
 741              	.LBB189:
 742              	.LBB190:
 743              	.LBB191:
  34:src/../h/MemoryAllocator.hpp ****         size_t heapEnd = (size_t)HEAP_END_ADDR - 1;
 744              		.loc 4 34 9 is_stmt 1
  34:src/../h/MemoryAllocator.hpp ****         size_t heapEnd = (size_t)HEAP_END_ADDR - 1;
 745              		.loc 4 34 16 is_stmt 0
 746 02ac 97070000 		la	a5,HEAP_START_ADDR
 746      83B70700 
 747 02b4 83B70700 		ld	a5,0(a5)
 748              	.LVL34:
  35:src/../h/MemoryAllocator.hpp **** 
 749              		.loc 4 35 9 is_stmt 1
  35:src/../h/MemoryAllocator.hpp **** 
 750              		.loc 4 35 48 is_stmt 0
 751 02b8 17070000 		la	a4,HEAP_END_ADDR
 751      03370700 
 752 02c0 03370700 		ld	a4,0(a4)
  35:src/../h/MemoryAllocator.hpp **** 
 753              		.loc 4 35 16
 754 02c4 1307F7FF 		addi	a4,a4,-1
 755              	.LVL35:
  37:src/../h/MemoryAllocator.hpp **** 
 756              		.loc 4 37 9 is_stmt 1
  37:src/../h/MemoryAllocator.hpp **** 
 757              		.loc 4 37 40 is_stmt 0
 758 02c8 3307F740 		sub	a4,a4,a5
 759              	.LVL36:
  37:src/../h/MemoryAllocator.hpp **** 
 760              		.loc 4 37 16
 761 02cc 13576700 		srli	a4,a4,6
 762              	.LVL37:
  40:src/../h/MemoryAllocator.hpp **** 
 763              		.loc 4 40 9 is_stmt 1
  40:src/../h/MemoryAllocator.hpp **** 
 764              		.loc 4 40 56 is_stmt 0
GAS LISTING /tmp/ccSTET18.s 			page 24


 765 02d0 93F6F703 		andi	a3,a5,63
  40:src/../h/MemoryAllocator.hpp **** 
 766              		.loc 4 40 78
 767 02d4 63860600 		beqz	a3,.L34
 768 02d8 13060004 		li	a2,64
 769 02dc B306D640 		sub	a3,a2,a3
 770              	.L34:
  40:src/../h/MemoryAllocator.hpp **** 
 771              		.loc 4 40 42
 772 02e0 B387D700 		add	a5,a5,a3
 773              	.LVL38:
  40:src/../h/MemoryAllocator.hpp **** 
 774              		.loc 4 40 19
 775 02e4 97060000 		sd	a5,_ZZN15MemoryAllocator11getInstanceEvE8instance,a3
 775      23B0F600 
  44:src/../h/MemoryAllocator.hpp ****         fmem_head->prev = nullptr;
 776              		.loc 4 44 9 is_stmt 1
  44:src/../h/MemoryAllocator.hpp ****         fmem_head->prev = nullptr;
 777              		.loc 4 44 25 is_stmt 0
 778 02ec 23B40700 		sd	zero,8(a5)
  45:src/../h/MemoryAllocator.hpp ****         fmem_head->size = sizeInBlocks;
 779              		.loc 4 45 9 is_stmt 1
  45:src/../h/MemoryAllocator.hpp ****         fmem_head->size = sizeInBlocks;
 780              		.loc 4 45 25 is_stmt 0
 781 02f0 23B80700 		sd	zero,16(a5)
 782              		.loc 4 46 9 is_stmt 1
 783              		.loc 4 46 25 is_stmt 0
 784 02f4 23B0E700 		sd	a4,0(a5)
 785              	.LVL39:
 786              	.LBE191:
 787              	.LBE190:
 788              	.LBE189:
  11:src/../h/MemoryAllocator.hpp ****         return instance;
 789              		.loc 4 11 32
 790 02f8 93071000 		li	a5,1
 791 02fc 17070000 		sb	a5,_ZGVZN15MemoryAllocator11getInstanceEvE8instance,a4
 791      2300F700 
 792              	.L33:
  12:src/../h/MemoryAllocator.hpp ****     }
 793              		.loc 4 12 9 is_stmt 1
 794              	.LBE188:
 795              	.LBE187:
  62:src/riscv.cpp ****                     retVal = (uint64)(MemoryAllocator::getInstance().memory_free((void*)*(args + 1)
 796              		.loc 1 62 81 is_stmt 0
 797 0304 833584FA 		ld	a1,-88(s0)
 798 0308 17050000 		lla	a0,_ZZN15MemoryAllocator11getInstanceEvE8instance
 798      13050500 
 799 0310 97000000 		call	_ZN15MemoryAllocator11memory_freeEPv@plt
 799      E7800000 
 800              	.LVL40:
  63:src/riscv.cpp ****                     break;
 801              		.loc 1 63 21 is_stmt 1
 802 0318 6FF01FEE 		j	.L12
 803              	.LVL41:
 804              	.L27:
  64:src/riscv.cpp ****                 case 0x11:
 805              		.loc 1 64 17
GAS LISTING /tmp/ccSTET18.s 			page 25


  65:src/riscv.cpp ****                     retVal = (uint64)(TCB::thread_create((TCB**)*(args + 1),
 806              		.loc 1 65 21
  65:src/riscv.cpp ****                     retVal = (uint64)(TCB::thread_create((TCB**)*(args + 1),
 807              		.loc 1 65 57 is_stmt 0
 808 031c 033704FD 		ld	a4,-48(s0)
 809 0320 3337E000 		snez	a4,a4
 810 0324 833604FC 		ld	a3,-64(s0)
 811 0328 033684FB 		ld	a2,-72(s0)
 812 032c 833504FB 		ld	a1,-80(s0)
 813 0330 033584FA 		ld	a0,-88(s0)
 814 0334 97000000 		call	_ZN3TCB13thread_createEPPS_PFvPvES2_S2_b@plt
 814      E7800000 
 815              	.LVL42:
  71:src/riscv.cpp ****                     break;
 816              		.loc 1 71 21 is_stmt 1
 817 033c 6FF0DFEB 		j	.L12
 818              	.LVL43:
 819              	.L26:
  72:src/riscv.cpp ****                 case 0x12:
 820              		.loc 1 72 17
  73:src/riscv.cpp ****                     retVal = TCB::thread_exit();
 821              		.loc 1 73 21
  73:src/riscv.cpp ****                     retVal = TCB::thread_exit();
 822              		.loc 1 73 46 is_stmt 0
 823 0340 97000000 		call	_ZN3TCB11thread_exitEv@plt
 823      E7800000 
 824              	.LVL44:
  74:src/riscv.cpp ****                     break;
 825              		.loc 1 74 21 is_stmt 1
 826 0348 6FF01FEB 		j	.L12
 827              	.LVL45:
 828              	.L25:
  75:src/riscv.cpp ****                 case 0x13:
 829              		.loc 1 75 17
  76:src/riscv.cpp ****                     TCB::thread_dispatch();
 830              		.loc 1 76 21
  76:src/riscv.cpp ****                     TCB::thread_dispatch();
 831              		.loc 1 76 41 is_stmt 0
 832 034c 97000000 		call	_ZN3TCB15thread_dispatchEv@plt
 832      E7800000 
 833              	.LVL46:
  53:src/riscv.cpp ****         uint64 retVal = 0;
 834              		.loc 1 53 16
 835 0354 13050000 		li	a0,0
 836 0358 6FF01FEA 		j	.L12
 837              	.L24:
  78:src/riscv.cpp ****                 case 0x21:
 838              		.loc 1 78 17 is_stmt 1
  79:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_open((MySemaphore**)*(args + 1),
 839              		.loc 1 79 21
  79:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_open((MySemaphore**)*(args + 1),
 840              		.loc 1 79 60 is_stmt 0
 841 035c 833504FB 		ld	a1,-80(s0)
 842 0360 033584FA 		ld	a0,-88(s0)
 843 0364 97000000 		call	_ZN11MySemaphore8sem_openEPPS_m@plt
 843      E7800000 
 844              	.LVL47:
GAS LISTING /tmp/ccSTET18.s 			page 26


  82:src/riscv.cpp ****                     break;
 845              		.loc 1 82 21 is_stmt 1
 846 036c 6FF0DFE8 		j	.L12
 847              	.LVL48:
 848              	.L23:
  83:src/riscv.cpp ****                 case 0x22:
 849              		.loc 1 83 17
  84:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_close((MySemaphore*)*(args + 1)));
 850              		.loc 1 84 21
  84:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_close((MySemaphore*)*(args + 1)));
 851              		.loc 1 84 61 is_stmt 0
 852 0370 033584FA 		ld	a0,-88(s0)
 853 0374 97000000 		call	_ZN11MySemaphore9sem_closeEPS_@plt
 853      E7800000 
 854              	.LVL49:
  85:src/riscv.cpp ****                     break;
 855              		.loc 1 85 21 is_stmt 1
 856 037c 6FF0DFE7 		j	.L12
 857              	.LVL50:
 858              	.L22:
  86:src/riscv.cpp ****                 case 0x23:
 859              		.loc 1 86 17
  87:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_wait((MySemaphore*)*(args + 1)));
 860              		.loc 1 87 21
  87:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_wait((MySemaphore*)*(args + 1)));
 861              		.loc 1 87 60 is_stmt 0
 862 0380 033584FA 		ld	a0,-88(s0)
 863 0384 97000000 		call	_ZN11MySemaphore8sem_waitEPS_@plt
 863      E7800000 
 864              	.LVL51:
  88:src/riscv.cpp ****                     break;
 865              		.loc 1 88 21 is_stmt 1
 866 038c 6FF0DFE6 		j	.L12
 867              	.LVL52:
 868              	.L21:
  89:src/riscv.cpp ****                 case 0x24:
 869              		.loc 1 89 17
  90:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_signal((MySemaphore*)*(args + 1)));
 870              		.loc 1 90 21
  90:src/riscv.cpp ****                     retVal = (uint64)(MySemaphore::sem_signal((MySemaphore*)*(args + 1)));
 871              		.loc 1 90 62 is_stmt 0
 872 0390 033584FA 		ld	a0,-88(s0)
 873 0394 97000000 		call	_ZN11MySemaphore10sem_signalEPS_@plt
 873      E7800000 
 874              	.LVL53:
  91:src/riscv.cpp ****                     break;
 875              		.loc 1 91 21 is_stmt 1
 876 039c 6FF0DFE5 		j	.L12
 877              	.LVL54:
 878              	.L20:
  92:src/riscv.cpp ****                 case 0x31:
 879              		.loc 1 92 17
  93:src/riscv.cpp ****                     TCB::time_sleep(*(args + 1));
 880              		.loc 1 93 21
  93:src/riscv.cpp ****                     TCB::time_sleep(*(args + 1));
 881              		.loc 1 93 36 is_stmt 0
 882 03a0 033584FA 		ld	a0,-88(s0)
GAS LISTING /tmp/ccSTET18.s 			page 27


 883 03a4 97000000 		call	_ZN3TCB10time_sleepEm@plt
 883      E7800000 
 884              	.LVL55:
  53:src/riscv.cpp ****         uint64 retVal = 0;
 885              		.loc 1 53 16
 886 03ac 13050000 		li	a0,0
 887 03b0 6FF09FE4 		j	.L12
 888              	.L19:
  95:src/riscv.cpp ****                 case 0x41:
 889              		.loc 1 95 17 is_stmt 1
  96:src/riscv.cpp ****                     retVal = Console::getInstance().get_from_input();
 890              		.loc 1 96 21
 891              	.LBB192:
 892              	.LBB193:
 893              		.file 5 "src/../h/console.hpp"
   1:src/../h/console.hpp **** #ifndef _console_hpp_
   2:src/../h/console.hpp **** #define _console_hpp_
   3:src/../h/console.hpp **** 
   4:src/../h/console.hpp **** #include "../h/my_buffer.hpp"
   5:src/../h/console.hpp **** 
   6:src/../h/console.hpp **** class Console{
   7:src/../h/console.hpp **** public:
   8:src/../h/console.hpp **** 
   9:src/../h/console.hpp ****     static Console& getInstance(){
  10:src/../h/console.hpp ****         static Console instance;
 894              		.loc 5 10 9
 895              		.loc 5 10 24 is_stmt 0
 896 03b4 97070000 		lbu	a5,_ZGVZN7Console11getInstanceEvE8instance
 896      83C70700 
 897 03bc 638C0700 		beqz	a5,.L51
 898              	.L35:
  11:src/../h/console.hpp ****         return instance;
 899              		.loc 5 11 9 is_stmt 1
 900              	.LBE193:
 901              	.LBE192:
  96:src/riscv.cpp ****                     retVal = Console::getInstance().get_from_input();
 902              		.loc 1 96 67 is_stmt 0
 903 03c0 17050000 		lla	a0,_ZZN7Console11getInstanceEvE8instance
 903      13050500 
 904 03c8 97000000 		call	_ZN7Console14get_from_inputEv@plt
 904      E7800000 
 905              	.LVL56:
  97:src/riscv.cpp ****                     break;
 906              		.loc 1 97 21 is_stmt 1
 907 03d0 6FF09FE2 		j	.L12
 908              	.LVL57:
 909              	.L51:
 910              	.LBB195:
 911              	.LBB194:
  10:src/../h/console.hpp ****         return instance;
 912              		.loc 5 10 24 is_stmt 0
 913 03d4 17050000 		lla	a0,_ZZN7Console11getInstanceEvE8instance
 913      13050500 
 914 03dc 97000000 		call	_ZN7ConsoleC1Ev@plt
 914      E7800000 
 915              	.LVL58:
 916 03e4 93071000 		li	a5,1
GAS LISTING /tmp/ccSTET18.s 			page 28


 917 03e8 17070000 		sb	a5,_ZGVZN7Console11getInstanceEvE8instance,a4
 917      2300F700 
 918 03f0 6FF01FFD 		j	.L35
 919              	.L18:
 920              	.LBE194:
 921              	.LBE195:
  98:src/riscv.cpp ****                 case 0x42:
 922              		.loc 1 98 17 is_stmt 1
  99:src/riscv.cpp ****                     Console::getInstance().put_in_output((char)*(args + 1));
 923              		.loc 1 99 21
 924              	.LBB196:
 925              	.LBB197:
  10:src/../h/console.hpp ****         return instance;
 926              		.loc 5 10 9
  10:src/../h/console.hpp ****         return instance;
 927              		.loc 5 10 24 is_stmt 0
 928 03f4 97070000 		lbu	a5,_ZGVZN7Console11getInstanceEvE8instance
 928      83C70700 
 929 03fc 63800702 		beqz	a5,.L52
 930              	.L36:
 931              		.loc 5 11 9 is_stmt 1
 932              	.LBE197:
 933              	.LBE196:
  99:src/riscv.cpp ****                     Console::getInstance().put_in_output((char)*(args + 1));
 934              		.loc 1 99 57 is_stmt 0
 935 0400 834584FA 		lbu	a1,-88(s0)
 936 0404 17050000 		lla	a0,_ZZN7Console11getInstanceEvE8instance
 936      13050500 
 937 040c 97000000 		call	_ZN7Console13put_in_outputEc@plt
 937      E7800000 
 938              	.LVL59:
  53:src/riscv.cpp ****         uint64 retVal = 0;
 939              		.loc 1 53 16
 940 0414 13050000 		li	a0,0
 941 0418 6FF01FDE 		j	.L12
 942              	.L52:
 943              	.LBB199:
 944              	.LBB198:
  10:src/../h/console.hpp ****         return instance;
 945              		.loc 5 10 24
 946 041c 17050000 		lla	a0,_ZZN7Console11getInstanceEvE8instance
 946      13050500 
 947 0424 97000000 		call	_ZN7ConsoleC1Ev@plt
 947      E7800000 
 948              	.LVL60:
 949 042c 93071000 		li	a5,1
 950 0430 17070000 		sb	a5,_ZGVZN7Console11getInstanceEvE8instance,a4
 950      2300F700 
 951 0438 6FF09FFC 		j	.L36
 952              	.L17:
 953              	.LBE198:
 954              	.LBE199:
 101:src/riscv.cpp ****                 case 0x50:
 955              		.loc 1 101 17 is_stmt 1
 102:src/riscv.cpp ****                     Scheduler::getInstance().put((TCB*)*(args + 1));
 956              		.loc 1 102 21
 957              	.LBB200:
GAS LISTING /tmp/ccSTET18.s 			page 29


 958              	.LBB201:
 959              		.file 6 "src/../h/../h/scheduler.hpp"
   1:src/../h/../h/scheduler.hpp **** #ifndef _scheduler_hpp_
   2:src/../h/../h/scheduler.hpp **** #define _scheduler_hpp_
   3:src/../h/../h/scheduler.hpp **** 
   4:src/../h/../h/scheduler.hpp **** //#include "../test/printing.hpp"
   5:src/../h/../h/scheduler.hpp **** 
   6:src/../h/../h/scheduler.hpp **** class TCB;
   7:src/../h/../h/scheduler.hpp **** 
   8:src/../h/../h/scheduler.hpp **** class Scheduler{
   9:src/../h/../h/scheduler.hpp **** public:
  10:src/../h/../h/scheduler.hpp **** 
  11:src/../h/../h/scheduler.hpp ****     static Scheduler& getInstance(){
  12:src/../h/../h/scheduler.hpp ****         static Scheduler instance;
 960              		.loc 6 12 9
 961              		.loc 6 12 26 is_stmt 0
 962 043c 97070000 		lbu	a5,_ZGVZN9Scheduler11getInstanceEvE8instance
 962      83C70700 
 963 0444 63940702 		bnez	a5,.L37
 964              	.LVL61:
 965              	.LBB202:
 966              	.LBB203:
  13:src/../h/../h/scheduler.hpp ****         return instance;
  14:src/../h/../h/scheduler.hpp ****     }
  15:src/../h/../h/scheduler.hpp **** 
  16:src/../h/../h/scheduler.hpp ****     Scheduler(const Scheduler&) = delete;
  17:src/../h/../h/scheduler.hpp ****     void operator=(Scheduler const&) = delete;
  18:src/../h/../h/scheduler.hpp **** 
  19:src/../h/../h/scheduler.hpp ****     TCB* get();
  20:src/../h/../h/scheduler.hpp **** 
  21:src/../h/../h/scheduler.hpp ****     void put(TCB* tcb);
  22:src/../h/../h/scheduler.hpp **** 
  23:src/../h/../h/scheduler.hpp **** //    static void printScheduler();
  24:src/../h/../h/scheduler.hpp **** 
  25:src/../h/../h/scheduler.hpp **** private:
  26:src/../h/../h/scheduler.hpp **** 
  27:src/../h/../h/scheduler.hpp ****     Scheduler(){
  28:src/../h/../h/scheduler.hpp ****         head = nullptr;
 967              		.loc 6 28 9 is_stmt 1
 968              		.loc 6 28 14 is_stmt 0
 969 0448 97070000 		la	a5,_ZN9Scheduler4headE
 969      83B70700 
 970 0450 23B00700 		sd	zero,0(a5)
  29:src/../h/../h/scheduler.hpp ****         tail = nullptr;
 971              		.loc 6 29 9 is_stmt 1
 972              		.loc 6 29 14 is_stmt 0
 973 0454 97070000 		la	a5,_ZN9Scheduler4tailE
 973      83B70700 
 974 045c 23B00700 		sd	zero,0(a5)
 975              	.LBE203:
 976              	.LBE202:
  12:src/../h/../h/scheduler.hpp ****         return instance;
 977              		.loc 6 12 26
 978 0460 93071000 		li	a5,1
 979 0464 17070000 		sb	a5,_ZGVZN9Scheduler11getInstanceEvE8instance,a4
 979      2300F700 
 980              	.LVL62:
GAS LISTING /tmp/ccSTET18.s 			page 30


 981              	.L37:
  13:src/../h/../h/scheduler.hpp ****         return instance;
 982              		.loc 6 13 9 is_stmt 1
 983              	.LBE201:
 984              	.LBE200:
 102:src/riscv.cpp ****                     Scheduler::getInstance().put((TCB*)*(args + 1));
 985              		.loc 1 102 49 is_stmt 0
 986 046c 833584FA 		ld	a1,-88(s0)
 987 0470 17050000 		lla	a0,_ZZN9Scheduler11getInstanceEvE8instance
 987      13050500 
 988 0478 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 988      E7800000 
 989              	.LVL63:
  53:src/riscv.cpp ****         uint64 retVal = 0;
 990              		.loc 1 53 16
 991 0480 13050000 		li	a0,0
 992 0484 6FF05FD7 		j	.L12
 993              	.L16:
 104:src/riscv.cpp ****                 case 0x60:
 994              		.loc 1 104 17 is_stmt 1
 105:src/riscv.cpp ****                     Riscv::switch_to_user();
 995              		.loc 1 105 21
 105:src/riscv.cpp ****                     Riscv::switch_to_user();
 996              		.loc 1 105 42 is_stmt 0
 997 0488 97000000 		call	_ZN5Riscv14switch_to_userEv
 997      E7800000 
 998              	.LVL64:
 106:src/riscv.cpp ****                     break;
 999              		.loc 1 106 21 is_stmt 1
  53:src/riscv.cpp ****         uint64 retVal = 0;
 1000              		.loc 1 53 16 is_stmt 0
 1001 0490 13050000 		li	a0,0
 106:src/riscv.cpp ****                     break;
 1002              		.loc 1 106 21
 1003 0494 6FF05FD6 		j	.L12
 1004              	.L15:
 107:src/riscv.cpp ****                 case 0x61:
 1005              		.loc 1 107 17 is_stmt 1
 108:src/riscv.cpp ****                     Riscv::switch_to_priviledged();
 1006              		.loc 1 108 21
 108:src/riscv.cpp ****                     Riscv::switch_to_priviledged();
 1007              		.loc 1 108 49 is_stmt 0
 1008 0498 97000000 		call	_ZN5Riscv21switch_to_priviledgedEv
 1008      E7800000 
 1009              	.LVL65:
 109:src/riscv.cpp ****                     break;
 1010              		.loc 1 109 21 is_stmt 1
  53:src/riscv.cpp ****         uint64 retVal = 0;
 1011              		.loc 1 53 16 is_stmt 0
 1012 04a0 13050000 		li	a0,0
 109:src/riscv.cpp ****                     break;
 1013              		.loc 1 109 21
 1014 04a4 6FF05FD5 		j	.L12
 1015              	.L13:
 110:src/riscv.cpp ****                 case 0x70:
 1016              		.loc 1 110 17 is_stmt 1
 111:src/riscv.cpp ****                     ((TCB*)*(args + 1))->set_periodic(true);
GAS LISTING /tmp/ccSTET18.s 			page 31


 1017              		.loc 1 111 21
 111:src/riscv.cpp ****                     ((TCB*)*(args + 1))->set_periodic(true);
 1018              		.loc 1 111 28 is_stmt 0
 1019 04a8 833584FA 		ld	a1,-88(s0)
 1020              	.LVL66:
 1021              	.LBB204:
 1022              	.LBB205:
  58:src/../h/TCB.hpp **** 
  59:src/../h/TCB.hpp ****     void set_periodic(bool b){
  60:src/../h/TCB.hpp ****         periodic = b;
 1023              		.loc 3 60 9 is_stmt 1
 1024              		.loc 3 60 18 is_stmt 0
 1025 04ac 93071000 		li	a5,1
 1026 04b0 A380F506 		sb	a5,97(a1)
  61:src/../h/TCB.hpp ****         periodicThread::getInstance().put(this);
 1027              		.loc 3 61 9 is_stmt 1
 1028              	.LBB206:
 1029              	.LBB207:
 1030              		.file 7 "src/../h/../h/periodic_threads.hpp"
   1:src/../h/../h/periodic_threads.hpp **** #ifndef _periodic_thread_hpp_
   2:src/../h/../h/periodic_threads.hpp **** #define _periodic_thread_hpp_
   3:src/../h/../h/periodic_threads.hpp **** 
   4:src/../h/../h/periodic_threads.hpp **** class TCB;
   5:src/../h/../h/periodic_threads.hpp **** 
   6:src/../h/../h/periodic_threads.hpp **** class periodicThread{
   7:src/../h/../h/periodic_threads.hpp **** 
   8:src/../h/../h/periodic_threads.hpp **** public:
   9:src/../h/../h/periodic_threads.hpp ****     static periodicThread& getInstance(){
  10:src/../h/../h/periodic_threads.hpp ****         static periodicThread instance;
 1031              		.loc 7 10 9
 1032              		.loc 7 10 31 is_stmt 0
 1033 04b4 97070000 		lbu	a5,_ZGVZN14periodicThread11getInstanceEvE8instance
 1033      83C70700 
 1034 04bc 63980700 		bnez	a5,.L38
 1035              	.LVL67:
 1036 04c0 93071000 		li	a5,1
 1037 04c4 17070000 		sb	a5,_ZGVZN14periodicThread11getInstanceEvE8instance,a4
 1037      2300F700 
 1038              	.LVL68:
 1039              	.L38:
  11:src/../h/../h/periodic_threads.hpp ****         return instance;
 1040              		.loc 7 11 9 is_stmt 1
 1041              	.LBE207:
 1042              	.LBE206:
 1043              		.loc 3 61 42 is_stmt 0
 1044 04cc 17050000 		lla	a0,_ZZN14periodicThread11getInstanceEvE8instance
 1044      13050500 
 1045 04d4 97000000 		call	_ZN14periodicThread3putEP3TCB@plt
 1045      E7800000 
 1046              	.LVL69:
  62:src/../h/TCB.hpp ****     }
 1047              		.loc 3 62 5
 1048 04dc 6FF05FD0 		j	.L30
 1049              	.LVL70:
 1050              	.L44:
 1051              	.LBE205:
 1052              	.LBE204:
GAS LISTING /tmp/ccSTET18.s 			page 32


  57:src/riscv.cpp ****             switch(*args){
 1053              		.loc 1 57 13
 1054 04e0 13050000 		li	a0,0
 1055 04e4 6FF05FD1 		j	.L12
 1056              	.L45:
 1057 04e8 13050000 		li	a0,0
 1058 04ec 6FF0DFD0 		j	.L12
 1059              	.LVL71:
 1060              	.L49:
 1061              	.LBE169:
 1062              	.LBB208:
 1063              	.LBB151:
 129:src/riscv.cpp ****         int irq = plic_claim();
 1064              		.loc 1 129 9 is_stmt 1
 129:src/riscv.cpp ****         int irq = plic_claim();
 1065              		.loc 1 129 29 is_stmt 0
 1066 04f0 97000000 		call	plic_claim@plt
 1066      E7800000 
 1067              	.LVL72:
 1068 04f8 13090500 		mv	s2,a0
 1069              	.LVL73:
 130:src/riscv.cpp ****         if(irq == CONSOLE_IRQ){
 1070              		.loc 1 130 9 is_stmt 1
 1071              	.LBB152:
 1072 04fc 9307A000 		li	a5,10
 1073 0500 630EF504 		beq	a0,a5,.L41
 1074              	.LVL74:
 1075              	.L39:
 1076              	.LBE152:
 140:src/riscv.cpp ****         plic_complete(irq);
 1077              		.loc 1 140 9
 140:src/riscv.cpp ****         plic_complete(irq);
 1078              		.loc 1 140 22 is_stmt 0
 1079 0504 13050900 		mv	a0,s2
 1080 0508 97000000 		call	plic_complete@plt
 1080      E7800000 
 1081              	.LVL75:
 1082              	.LBE151:
 1083              	.LBE208:
 1084              	.LBE226:
 1085              	.LBE230:
 1086              		.loc 1 148 1
 1087 0510 6FF01FBE 		j	.L7
 1088              	.L54:
 1089              	.LBB231:
 1090              	.LBB227:
 1091              	.LBB209:
 1092              	.LBB168:
 1093              	.LBB167:
 1094              	.LBB153:
 1095              	.LBB154:
 1096              	.LBB155:
 1097              	.LBB156:
  10:src/../h/console.hpp ****         return instance;
 1098              		.loc 5 10 24
 1099 0514 17050000 		lla	a0,_ZZN7Console11getInstanceEvE8instance
 1099      13050500 
GAS LISTING /tmp/ccSTET18.s 			page 33


 1100 051c 97000000 		call	_ZN7ConsoleC1Ev@plt
 1100      E7800000 
 1101              	.LVL76:
 1102 0524 93071000 		li	a5,1
 1103 0528 17070000 		sb	a5,_ZGVZN7Console11getInstanceEvE8instance,a4
 1103      2300F700 
 1104              	.L40:
 1105              		.loc 5 11 9 is_stmt 1
 1106              	.LBE156:
 1107              	.LBE155:
 133:src/riscv.cpp ****                 Console::getInstance().put_in_input(*((char*)CONSOLE_RX_DATA));
 1108              		.loc 1 133 52 is_stmt 0
 1109 0530 97070000 		la	a5,CONSOLE_RX_DATA
 1109      83B70700 
 1110 0538 83B40700 		ld	s1,0(a5)
 1111 053c 83C50400 		lbu	a1,0(s1)
 1112 0540 17050000 		lla	a0,_ZZN7Console11getInstanceEvE8instance
 1112      13050500 
 1113 0548 97000000 		call	_ZN7Console12put_in_inputEc@plt
 1113      E7800000 
 1114              	.LVL77:
 134:src/riscv.cpp ****                 if(*((char*)CONSOLE_RX_DATA) == 107){
 1115              		.loc 1 134 17 is_stmt 1
 1116              	.LBB158:
 134:src/riscv.cpp ****                 if(*((char*)CONSOLE_RX_DATA) == 107){
 1117              		.loc 1 134 20 is_stmt 0
 1118 0550 03C70400 		lbu	a4,0(s1)
 134:src/riscv.cpp ****                 if(*((char*)CONSOLE_RX_DATA) == 107){
 1119              		.loc 1 134 17
 1120 0554 9307B006 		li	a5,107
 1121 0558 6306F702 		beq	a4,a5,.L53
 1122              	.L41:
 1123              	.LBE158:
 1124              	.LBE154:
 132:src/riscv.cpp ****             while(*((char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT){
 1125              		.loc 1 132 13 is_stmt 1
 132:src/riscv.cpp ****             while(*((char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT){
 1126              		.loc 1 132 46
 132:src/riscv.cpp ****             while(*((char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT){
 1127              		.loc 1 132 19 is_stmt 0
 1128 055c 97070000 		la	a5,CONSOLE_STATUS
 1128      83B70700 
 1129 0564 83B70700 		ld	a5,0(a5)
 1130 0568 83C70700 		lbu	a5,0(a5)
 132:src/riscv.cpp ****             while(*((char*)CONSOLE_STATUS) & CONSOLE_RX_STATUS_BIT){
 1131              		.loc 1 132 46
 1132 056c 93F71700 		andi	a5,a5,1
 1133 0570 E38A07F8 		beqz	a5,.L39
 1134              	.LBB166:
 133:src/riscv.cpp ****                 Console::getInstance().put_in_input(*((char*)CONSOLE_RX_DATA));
 1135              		.loc 1 133 17 is_stmt 1
 1136              	.LBB164:
 1137              	.LBB157:
  10:src/../h/console.hpp ****         return instance;
 1138              		.loc 5 10 9
  10:src/../h/console.hpp ****         return instance;
 1139              		.loc 5 10 24 is_stmt 0
GAS LISTING /tmp/ccSTET18.s 			page 34


 1140 0574 97070000 		lbu	a5,_ZGVZN7Console11getInstanceEvE8instance
 1140      83C70700 
 1141 057c E39A07FA 		bnez	a5,.L40
 1142 0580 6FF05FF9 		j	.L54
 1143              	.L53:
 1144              	.LBE157:
 1145              	.LBE164:
 1146              	.LBB165:
 1147              	.LBB159:
 135:src/riscv.cpp ****                     TCB* tmp = periodicThread::getInstance().get();
 1148              		.loc 1 135 21 is_stmt 1
 1149              	.LBB160:
 1150              	.LBB161:
  10:src/../h/../h/periodic_threads.hpp ****         return instance;
 1151              		.loc 7 10 9
  10:src/../h/../h/periodic_threads.hpp ****         return instance;
 1152              		.loc 7 10 31 is_stmt 0
 1153 0584 97070000 		lbu	a5,_ZGVZN14periodicThread11getInstanceEvE8instance
 1153      83C70700 
 1154 058c 63980700 		bnez	a5,.L42
 1155              	.LVL78:
 1156 0590 93071000 		li	a5,1
 1157 0594 17070000 		sb	a5,_ZGVZN14periodicThread11getInstanceEvE8instance,a4
 1157      2300F700 
 1158              	.LVL79:
 1159              	.L42:
 1160              		.loc 7 11 9 is_stmt 1
 1161              	.LBE161:
 1162              	.LBE160:
 135:src/riscv.cpp ****                     TCB* tmp = periodicThread::getInstance().get();
 1163              		.loc 1 135 65 is_stmt 0
 1164 059c 17050000 		lla	a0,_ZZN14periodicThread11getInstanceEvE8instance
 1164      13050500 
 1165 05a4 97000000 		call	_ZN14periodicThread3getEv@plt
 1165      E7800000 
 1166              	.LVL80:
 136:src/riscv.cpp ****                     tmp->set_finished(true);
 1167              		.loc 1 136 21 is_stmt 1
 1168              	.LBB162:
 1169              	.LBB163:
  35:src/../h/TCB.hpp **** 
 1170              		.loc 3 35 32
  35:src/../h/TCB.hpp **** 
 1171              		.loc 3 35 47 is_stmt 0
 1172 05ac 93071000 		li	a5,1
 1173 05b0 2304F502 		sb	a5,40(a0)
  35:src/../h/TCB.hpp **** 
 1174              		.loc 3 35 52
 1175 05b4 6FF09FFA 		j	.L41
 1176              	.LBE163:
 1177              	.LBE162:
 1178              	.LBE159:
 1179              	.LBE165:
 1180              	.LBE166:
 1181              	.LBE153:
 1182              	.LBE167:
 1183              	.LBE168:
GAS LISTING /tmp/ccSTET18.s 			page 35


 1184              	.LBE209:
 1185              	.LBE227:
 1186              	.LBE231:
 1187              		.cfi_endproc
 1188              	.LFE76:
 1190              		.weak	_ZGVZN7Console11getInstanceEvE8instance
 1191              		.section	.bss._ZGVZN7Console11getInstanceEvE8instance,"awG",@nobits,_ZGVZN7Console11getInstanceEvE
 1192              		.align	3
 1195              	_ZGVZN7Console11getInstanceEvE8instance:
 1196 0000 00000000 		.zero	8
 1196      00000000 
 1197              		.weak	_ZZN7Console11getInstanceEvE8instance
 1198              		.section	.bss._ZZN7Console11getInstanceEvE8instance,"awG",@nobits,_ZZN7Console11getInstanceEvE8ins
 1199              		.align	3
 1202              	_ZZN7Console11getInstanceEvE8instance:
 1203 0000 00000000 		.zero	16
 1203      00000000 
 1203      00000000 
 1203      00000000 
 1204              		.weak	_ZGVZN14periodicThread11getInstanceEvE8instance
 1205              		.section	.bss._ZGVZN14periodicThread11getInstanceEvE8instance,"awG",@nobits,_ZGVZN14periodicThread
 1206              		.align	3
 1209              	_ZGVZN14periodicThread11getInstanceEvE8instance:
 1210 0000 00000000 		.zero	8
 1210      00000000 
 1211              		.weak	_ZZN14periodicThread11getInstanceEvE8instance
 1212              		.section	.bss._ZZN14periodicThread11getInstanceEvE8instance,"awG",@nobits,_ZZN14periodicThread11ge
 1213              		.align	3
 1216              	_ZZN14periodicThread11getInstanceEvE8instance:
 1217 0000 00       		.zero	1
 1218              		.weak	_ZGVZN9Scheduler11getInstanceEvE8instance
 1219              		.section	.bss._ZGVZN9Scheduler11getInstanceEvE8instance,"awG",@nobits,_ZGVZN9Scheduler11getInstanc
 1220              		.align	3
 1223              	_ZGVZN9Scheduler11getInstanceEvE8instance:
 1224 0000 00000000 		.zero	8
 1224      00000000 
 1225              		.weak	_ZZN9Scheduler11getInstanceEvE8instance
 1226              		.section	.bss._ZZN9Scheduler11getInstanceEvE8instance,"awG",@nobits,_ZZN9Scheduler11getInstanceEvE
 1227              		.align	3
 1230              	_ZZN9Scheduler11getInstanceEvE8instance:
 1231 0000 00       		.zero	1
 1232              		.weak	_ZGVZN15MemoryAllocator11getInstanceEvE8instance
 1233              		.section	.bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZGVZN15MemoryAllocat
 1234              		.align	3
 1237              	_ZGVZN15MemoryAllocator11getInstanceEvE8instance:
 1238 0000 00000000 		.zero	8
 1238      00000000 
 1239              		.weak	_ZZN15MemoryAllocator11getInstanceEvE8instance
 1240              		.section	.bss._ZZN15MemoryAllocator11getInstanceEvE8instance,"awG",@nobits,_ZZN15MemoryAllocator11
 1241              		.align	3
 1244              	_ZZN15MemoryAllocator11getInstanceEvE8instance:
 1245 0000 00000000 		.zero	8
 1245      00000000 
 1246              		.text
 1247              	.Letext0:
 1248              		.file 8 "src/../h/../lib/hw.h"
 1249              		.file 9 "src/../h/../h/TS.hpp"
GAS LISTING /tmp/ccSTET18.s 			page 36


 1250              		.file 10 "src/../h/semaphore.hpp"
 1251              		.file 11 "src/../h/../h/my_buffer.hpp"
GAS LISTING /tmp/ccSTET18.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccSTET18.s:9      .text:0000000000000000 _ZN5Riscv14switch_to_userEv
     /tmp/ccSTET18.s:13     .text:0000000000000000 .L0 
     /tmp/ccSTET18.s:14     .text:0000000000000000 .L0 
     /tmp/ccSTET18.s:15     .text:0000000000000004 .L0 
     /tmp/ccSTET18.s:17     .text:0000000000000008 .L0 
     /tmp/ccSTET18.s:19     .text:000000000000000c .L0 
     /tmp/ccSTET18.s:25     .text:000000000000000c .L0 
     /tmp/ccSTET18.s:26     .text:000000000000000c .L0 
     /tmp/ccSTET18.s:27     .text:000000000000000c .L0 
     /tmp/ccSTET18.s:37     .text:0000000000000014 .L0 
     /tmp/ccSTET18.s:38     .text:0000000000000018 .L0 
     /tmp/ccSTET18.s:39     .text:0000000000000018 .L0 
     /tmp/ccSTET18.s:41     .text:000000000000001c .L0 
     /tmp/ccSTET18.s:43     .text:0000000000000020 .L0 
     /tmp/ccSTET18.s:49     .text:0000000000000020 _ZN5Riscv21switch_to_priviledgedEv
     /tmp/ccSTET18.s:52     .text:0000000000000020 .L0 
     /tmp/ccSTET18.s:53     .text:0000000000000020 .L0 
     /tmp/ccSTET18.s:54     .text:0000000000000024 .L0 
     /tmp/ccSTET18.s:56     .text:0000000000000028 .L0 
     /tmp/ccSTET18.s:58     .text:000000000000002c .L0 
     /tmp/ccSTET18.s:63     .text:000000000000002c .L0 
     /tmp/ccSTET18.s:64     .text:000000000000002c .L0 
     /tmp/ccSTET18.s:65     .text:000000000000002c .L0 
     /tmp/ccSTET18.s:75     .text:0000000000000034 .L0 
     /tmp/ccSTET18.s:76     .text:0000000000000038 .L0 
     /tmp/ccSTET18.s:77     .text:0000000000000038 .L0 
     /tmp/ccSTET18.s:79     .text:000000000000003c .L0 
     /tmp/ccSTET18.s:81     .text:0000000000000040 .L0 
     /tmp/ccSTET18.s:87     .text:0000000000000040 _ZN5Riscv10popSppSpieEv
     /tmp/ccSTET18.s:90     .text:0000000000000040 .L0 
     /tmp/ccSTET18.s:91     .text:0000000000000040 .L0 
     /tmp/ccSTET18.s:92     .text:0000000000000044 .L0 
     /tmp/ccSTET18.s:94     .text:0000000000000048 .L0 
     /tmp/ccSTET18.s:96     .text:000000000000004c .L0 
     /tmp/ccSTET18.s:98     .text:000000000000004c .L0 
       src/riscv.cpp:17     .text:000000000000004c .L0 
     /tmp/ccSTET18.s:104    .text:0000000000000050 .L0 
       src/riscv.cpp:18     .text:0000000000000050 .L0 
     /tmp/ccSTET18.s:110    .text:0000000000000054 .L0 
     /tmp/ccSTET18.s:111    .text:0000000000000058 .L0 
     /tmp/ccSTET18.s:112    .text:0000000000000058 .L0 
     /tmp/ccSTET18.s:114    .text:000000000000005c .L0 
     /tmp/ccSTET18.s:116    .text:0000000000000060 .L0 
     /tmp/ccSTET18.s:122    .text:0000000000000060 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccSTET18.s:125    .text:0000000000000060 .L0 
     /tmp/ccSTET18.s:126    .text:0000000000000060 .L0 
     /tmp/ccSTET18.s:127    .text:0000000000000064 .L0 
     /tmp/ccSTET18.s:132    .text:0000000000000074 .L0 
     /tmp/ccSTET18.s:133    .text:0000000000000074 .L0 
     /tmp/ccSTET18.s:134    .text:0000000000000074 .L0 
     /tmp/ccSTET18.s:135    .text:0000000000000074 .L0 
     /tmp/ccSTET18.s:137    .text:0000000000000078 .L0 
     /tmp/ccSTET18.s:139    .text:0000000000000078 .L0 
     /tmp/ccSTET18.s:140    .text:0000000000000078 .L0 
       src/riscv.cpp:25     .text:0000000000000078 .L0 
GAS LISTING /tmp/ccSTET18.s 			page 38


     /tmp/ccSTET18.s:148    .text:0000000000000080 .L0 
       src/riscv.cpp:26     .text:0000000000000080 .L0 
     /tmp/ccSTET18.s:156    .text:0000000000000088 .L0 
       src/riscv.cpp:27     .text:0000000000000088 .L0 
     /tmp/ccSTET18.s:164    .text:0000000000000090 .L0 
       src/riscv.cpp:28     .text:0000000000000090 .L0 
     /tmp/ccSTET18.s:172    .text:0000000000000098 .L0 
       src/riscv.cpp:29     .text:0000000000000098 .L0 
     /tmp/ccSTET18.s:180    .text:00000000000000a0 .L0 
       src/riscv.cpp:30     .text:00000000000000a0 .L0 
     /tmp/ccSTET18.s:188    .text:00000000000000a8 .L0 
       src/riscv.cpp:31     .text:00000000000000a8 .L0 
     /tmp/ccSTET18.s:196    .text:00000000000000b0 .L0 
       src/riscv.cpp:32     .text:00000000000000b0 .L0 
     /tmp/ccSTET18.s:206    .text:00000000000000b8 .L0 
     /tmp/ccSTET18.s:207    .text:00000000000000b8 .L0 
     /tmp/ccSTET18.s:208    .text:00000000000000b8 .L0 
  src/../h/riscv.hpp:101    .text:00000000000000b8 .L0 
     /tmp/ccSTET18.s:216    .text:00000000000000c0 .L0 
     /tmp/ccSTET18.s:217    .text:00000000000000c0 .L0 
     /tmp/ccSTET18.s:223    .text:00000000000000c4 .L0 
     /tmp/ccSTET18.s:231    .text:00000000000000d4 .L0 
     /tmp/ccSTET18.s:232    .text:00000000000000d4 .L0 
     /tmp/ccSTET18.s:234    .text:00000000000000d8 .L0 
     /tmp/ccSTET18.s:242    .text:00000000000000e0 .L0 
     /tmp/ccSTET18.s:252    .text:00000000000000f0 .L0 
     /tmp/ccSTET18.s:253    .text:00000000000000f4 .L0 
     /tmp/ccSTET18.s:254    .text:00000000000000f4 .L0 
     /tmp/ccSTET18.s:256    .text:00000000000000f8 .L0 
     /tmp/ccSTET18.s:257    .text:00000000000000f8 .L0 
     /tmp/ccSTET18.s:259    .text:00000000000000fc .L0 
     /tmp/ccSTET18.s:261    .text:0000000000000100 .L0 
     /tmp/ccSTET18.s:263    .text:0000000000000104 .L0 
     /tmp/ccSTET18.s:267    .text:0000000000000108 .L0 
     /tmp/ccSTET18.s:273    .text:0000000000000108 .L0 
     /tmp/ccSTET18.s:274    .text:0000000000000108 .L0 
     /tmp/ccSTET18.s:275    .text:0000000000000108 .L0 
     /tmp/ccSTET18.s:285    .text:0000000000000110 .L0 
     /tmp/ccSTET18.s:286    .text:0000000000000110 .L0 
     /tmp/ccSTET18.s:291    .text:0000000000000124 .L0 
     /tmp/ccSTET18.s:292    .text:0000000000000124 .L0 
     /tmp/ccSTET18.s:296    .text:000000000000012c .L0 
     /tmp/ccSTET18.s:297    .text:000000000000012c .L0 
     /tmp/ccSTET18.s:304    .text:0000000000000138 .L0 
     /tmp/ccSTET18.s:305    .text:0000000000000138 .L0 
     /tmp/ccSTET18.s:310    .text:000000000000013c .L0 
     /tmp/ccSTET18.s:312    .text:0000000000000140 .L0 
     /tmp/ccSTET18.s:317    .text:0000000000000144 .L0 
     /tmp/ccSTET18.s:318    .text:0000000000000144 .L0 
     /tmp/ccSTET18.s:319    .text:0000000000000144 .L0 
  src/../h/riscv.hpp:113    .text:0000000000000144 .L0 
     /tmp/ccSTET18.s:327    .text:000000000000014c .L0 
     /tmp/ccSTET18.s:328    .text:000000000000014c .L0 
     /tmp/ccSTET18.s:332    .text:0000000000000150 .L0 
     /tmp/ccSTET18.s:336    .text:0000000000000154 .L0 
     /tmp/ccSTET18.s:337    .text:0000000000000154 .L0 
     /tmp/ccSTET18.s:338    .text:0000000000000154 .L0 
GAS LISTING /tmp/ccSTET18.s 			page 39


  src/../h/riscv.hpp:181    .text:0000000000000154 .L0 
     /tmp/ccSTET18.s:346    .text:000000000000015c .L0 
     /tmp/ccSTET18.s:347    .text:000000000000015c .L0 
     /tmp/ccSTET18.s:351    .text:0000000000000160 .L0 
     /tmp/ccSTET18.s:353    .text:0000000000000164 .L0 
     /tmp/ccSTET18.s:354    .text:0000000000000164 .L0 
     /tmp/ccSTET18.s:356    .text:0000000000000168 .L0 
     /tmp/ccSTET18.s:357    .text:0000000000000168 .L0 
     /tmp/ccSTET18.s:360    .text:0000000000000170 .L0 
     /tmp/ccSTET18.s:361    .text:0000000000000170 .L0 
     /tmp/ccSTET18.s:366    .text:0000000000000174 .L0 
  src/../h/riscv.hpp:187    .text:0000000000000174 .L0 
     /tmp/ccSTET18.s:376    .text:0000000000000178 .L0 
     /tmp/ccSTET18.s:377    .text:0000000000000178 .L0 
     /tmp/ccSTET18.s:382    .text:000000000000017c .L0 
  src/../h/riscv.hpp:119    .text:000000000000017c .L0 
     /tmp/ccSTET18.s:389    .text:0000000000000180 .L0 
     /tmp/ccSTET18.s:400    .text:0000000000000184 .L0 
     /tmp/ccSTET18.s:403    .text:0000000000000184 .L0 
     /tmp/ccSTET18.s:404    .text:0000000000000184 .L0 
     /tmp/ccSTET18.s:405    .text:0000000000000184 .L0 
  src/../h/riscv.hpp:113    .text:0000000000000184 .L0 
     /tmp/ccSTET18.s:413    .text:000000000000018c .L0 
     /tmp/ccSTET18.s:414    .text:000000000000018c .L0 
     /tmp/ccSTET18.s:418    .text:0000000000000190 .L0 
     /tmp/ccSTET18.s:420    .text:0000000000000194 .L0 
     /tmp/ccSTET18.s:424    .text:0000000000000198 .L0 
     /tmp/ccSTET18.s:425    .text:0000000000000198 .L0 
     /tmp/ccSTET18.s:426    .text:0000000000000198 .L0 
  src/../h/riscv.hpp:181    .text:0000000000000198 .L0 
     /tmp/ccSTET18.s:434    .text:00000000000001a0 .L0 
     /tmp/ccSTET18.s:435    .text:00000000000001a0 .L0 
     /tmp/ccSTET18.s:439    .text:00000000000001a4 .L0 
     /tmp/ccSTET18.s:441    .text:00000000000001a8 .L0 
     /tmp/ccSTET18.s:442    .text:00000000000001a8 .L0 
     /tmp/ccSTET18.s:444    .text:00000000000001ac .L0 
     /tmp/ccSTET18.s:578    .text:00000000000001e0 .L0 
     /tmp/ccSTET18.s:582    .text:00000000000001e0 .L0 
     /tmp/ccSTET18.s:583    .text:00000000000001e0 .L0 
     /tmp/ccSTET18.s:584    .text:00000000000001e0 .L0 
     /tmp/ccSTET18.s:590    .text:00000000000001ec .L0 
     /tmp/ccSTET18.s:594    .text:00000000000001f0 .L0 
     /tmp/ccSTET18.s:600    .text:00000000000001f4 .L0 
     /tmp/ccSTET18.s:604    .text:00000000000001f8 .L0 
       src/riscv.cpp:119    .text:00000000000001f8 .L0 
     /tmp/ccSTET18.s:610    .text:00000000000001fc .L0 
       src/riscv.cpp:120    .text:00000000000001fc .L0 
     /tmp/ccSTET18.s:615    .text:0000000000000200 .L0 
     /tmp/ccSTET18.s:617    .text:0000000000000200 .L0 
     /tmp/ccSTET18.s:622    .text:0000000000000204 .L0 
  src/../h/riscv.hpp:119    .text:0000000000000204 .L0 
     /tmp/ccSTET18.s:632    .text:0000000000000208 .L0 
     /tmp/ccSTET18.s:633    .text:0000000000000208 .L0 
     /tmp/ccSTET18.s:635    .text:000000000000020c .L0 
     /tmp/ccSTET18.s:637    .text:0000000000000210 .L0 
     /tmp/ccSTET18.s:640    .text:0000000000000218 .L0 
     /tmp/ccSTET18.s:641    .text:0000000000000218 .L0 
GAS LISTING /tmp/ccSTET18.s 			page 40


     /tmp/ccSTET18.s:646    .text:000000000000021c .L0 
  src/../h/riscv.hpp:187    .text:000000000000021c .L0 
     /tmp/ccSTET18.s:653    .text:0000000000000220 .L0 
     /tmp/ccSTET18.s:659    .text:0000000000000224 .L0 
     /tmp/ccSTET18.s:663    .text:0000000000000224 .L0 
     /tmp/ccSTET18.s:664    .text:0000000000000224 .L0 
     /tmp/ccSTET18.s:1237   .bss._ZGVZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZGVZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccSTET18.s:665    .text:0000000000000224 .L0 
     /tmp/ccSTET18.s:672    .text:0000000000000230 .L0 
     /tmp/ccSTET18.s:673    .text:0000000000000230 .L0 
     /tmp/ccSTET18.s:677    .text:000000000000023c .L0 
     /tmp/ccSTET18.s:678    .text:000000000000023c .L0 
     /tmp/ccSTET18.s:681    .text:0000000000000248 .L0 
     /tmp/ccSTET18.s:684    .text:000000000000024c .L0 
     /tmp/ccSTET18.s:685    .text:000000000000024c .L0 
     /tmp/ccSTET18.s:688    .text:0000000000000250 .L0 
     /tmp/ccSTET18.s:691    .text:0000000000000254 .L0 
     /tmp/ccSTET18.s:692    .text:0000000000000254 .L0 
     /tmp/ccSTET18.s:694    .text:0000000000000258 .L0 
     /tmp/ccSTET18.s:699    .text:0000000000000264 .L0 
     /tmp/ccSTET18.s:1244   .bss._ZZN15MemoryAllocator11getInstanceEvE8instance:0000000000000000 _ZZN15MemoryAllocator11getInstanceEvE8instance
     /tmp/ccSTET18.s:702    .text:0000000000000268 .L0 
     /tmp/ccSTET18.s:704    .text:0000000000000270 .L0 
     /tmp/ccSTET18.s:705    .text:0000000000000270 .L0 
     /tmp/ccSTET18.s:707    .text:0000000000000274 .L0 
     /tmp/ccSTET18.s:708    .text:0000000000000274 .L0 
     /tmp/ccSTET18.s:710    .text:0000000000000278 .L0 
     /tmp/ccSTET18.s:711    .text:0000000000000278 .L0 
     /tmp/ccSTET18.s:717    .text:000000000000027c .L0 
     /tmp/ccSTET18.s:723    .text:0000000000000288 .L0 
     /tmp/ccSTET18.s:724    .text:0000000000000288 .L0 
     /tmp/ccSTET18.s:729    .text:000000000000029c .L0 
     /tmp/ccSTET18.s:733    .text:00000000000002a0 .L0 
     /tmp/ccSTET18.s:736    .text:00000000000002a0 .L0 
     /tmp/ccSTET18.s:737    .text:00000000000002a0 .L0 
     /tmp/ccSTET18.s:738    .text:00000000000002a0 .L0 
     /tmp/ccSTET18.s:745    .text:00000000000002ac .L0 
     /tmp/ccSTET18.s:746    .text:00000000000002ac .L0 
     /tmp/ccSTET18.s:750    .text:00000000000002b8 .L0 
     /tmp/ccSTET18.s:751    .text:00000000000002b8 .L0 
     /tmp/ccSTET18.s:754    .text:00000000000002c4 .L0 
     /tmp/ccSTET18.s:757    .text:00000000000002c8 .L0 
     /tmp/ccSTET18.s:758    .text:00000000000002c8 .L0 
     /tmp/ccSTET18.s:761    .text:00000000000002cc .L0 
     /tmp/ccSTET18.s:764    .text:00000000000002d0 .L0 
     /tmp/ccSTET18.s:765    .text:00000000000002d0 .L0 
     /tmp/ccSTET18.s:767    .text:00000000000002d4 .L0 
     /tmp/ccSTET18.s:772    .text:00000000000002e0 .L0 
     /tmp/ccSTET18.s:775    .text:00000000000002e4 .L0 
     /tmp/ccSTET18.s:777    .text:00000000000002ec .L0 
     /tmp/ccSTET18.s:778    .text:00000000000002ec .L0 
     /tmp/ccSTET18.s:780    .text:00000000000002f0 .L0 
     /tmp/ccSTET18.s:781    .text:00000000000002f0 .L0 
     /tmp/ccSTET18.s:783    .text:00000000000002f4 .L0 
     /tmp/ccSTET18.s:784    .text:00000000000002f4 .L0 
     /tmp/ccSTET18.s:790    .text:00000000000002f8 .L0 
     /tmp/ccSTET18.s:796    .text:0000000000000304 .L0 
GAS LISTING /tmp/ccSTET18.s 			page 41


     /tmp/ccSTET18.s:797    .text:0000000000000304 .L0 
     /tmp/ccSTET18.s:802    .text:0000000000000318 .L0 
     /tmp/ccSTET18.s:806    .text:000000000000031c .L0 
     /tmp/ccSTET18.s:807    .text:000000000000031c .L0 
     /tmp/ccSTET18.s:808    .text:000000000000031c .L0 
     /tmp/ccSTET18.s:817    .text:000000000000033c .L0 
     /tmp/ccSTET18.s:821    .text:0000000000000340 .L0 
     /tmp/ccSTET18.s:822    .text:0000000000000340 .L0 
     /tmp/ccSTET18.s:823    .text:0000000000000340 .L0 
     /tmp/ccSTET18.s:826    .text:0000000000000348 .L0 
     /tmp/ccSTET18.s:830    .text:000000000000034c .L0 
     /tmp/ccSTET18.s:831    .text:000000000000034c .L0 
     /tmp/ccSTET18.s:832    .text:000000000000034c .L0 
     /tmp/ccSTET18.s:835    .text:0000000000000354 .L0 
     /tmp/ccSTET18.s:839    .text:000000000000035c .L0 
     /tmp/ccSTET18.s:840    .text:000000000000035c .L0 
     /tmp/ccSTET18.s:841    .text:000000000000035c .L0 
     /tmp/ccSTET18.s:846    .text:000000000000036c .L0 
     /tmp/ccSTET18.s:850    .text:0000000000000370 .L0 
     /tmp/ccSTET18.s:851    .text:0000000000000370 .L0 
     /tmp/ccSTET18.s:852    .text:0000000000000370 .L0 
     /tmp/ccSTET18.s:856    .text:000000000000037c .L0 
     /tmp/ccSTET18.s:860    .text:0000000000000380 .L0 
     /tmp/ccSTET18.s:861    .text:0000000000000380 .L0 
     /tmp/ccSTET18.s:862    .text:0000000000000380 .L0 
     /tmp/ccSTET18.s:866    .text:000000000000038c .L0 
     /tmp/ccSTET18.s:870    .text:0000000000000390 .L0 
     /tmp/ccSTET18.s:871    .text:0000000000000390 .L0 
     /tmp/ccSTET18.s:872    .text:0000000000000390 .L0 
     /tmp/ccSTET18.s:876    .text:000000000000039c .L0 
     /tmp/ccSTET18.s:880    .text:00000000000003a0 .L0 
     /tmp/ccSTET18.s:881    .text:00000000000003a0 .L0 
     /tmp/ccSTET18.s:882    .text:00000000000003a0 .L0 
     /tmp/ccSTET18.s:886    .text:00000000000003ac .L0 
     /tmp/ccSTET18.s:890    .text:00000000000003b4 .L0 
     /tmp/ccSTET18.s:894    .text:00000000000003b4 .L0 
     /tmp/ccSTET18.s:895    .text:00000000000003b4 .L0 
     /tmp/ccSTET18.s:1195   .bss._ZGVZN7Console11getInstanceEvE8instance:0000000000000000 _ZGVZN7Console11getInstanceEvE8instance
     /tmp/ccSTET18.s:896    .text:00000000000003b4 .L0 
     /tmp/ccSTET18.s:902    .text:00000000000003c0 .L0 
     /tmp/ccSTET18.s:1202   .bss._ZZN7Console11getInstanceEvE8instance:0000000000000000 _ZZN7Console11getInstanceEvE8instance
     /tmp/ccSTET18.s:903    .text:00000000000003c0 .L0 
     /tmp/ccSTET18.s:907    .text:00000000000003d0 .L0 
     /tmp/ccSTET18.s:913    .text:00000000000003d4 .L0 
     /tmp/ccSTET18.s:923    .text:00000000000003f4 .L0 
     /tmp/ccSTET18.s:926    .text:00000000000003f4 .L0 
     /tmp/ccSTET18.s:927    .text:00000000000003f4 .L0 
     /tmp/ccSTET18.s:928    .text:00000000000003f4 .L0 
     /tmp/ccSTET18.s:934    .text:0000000000000400 .L0 
     /tmp/ccSTET18.s:935    .text:0000000000000400 .L0 
     /tmp/ccSTET18.s:940    .text:0000000000000414 .L0 
     /tmp/ccSTET18.s:946    .text:000000000000041c .L0 
     /tmp/ccSTET18.s:956    .text:000000000000043c .L0 
     /tmp/ccSTET18.s:960    .text:000000000000043c .L0 
     /tmp/ccSTET18.s:961    .text:000000000000043c .L0 
     /tmp/ccSTET18.s:1223   .bss._ZGVZN9Scheduler11getInstanceEvE8instance:0000000000000000 _ZGVZN9Scheduler11getInstanceEvE8instance
     /tmp/ccSTET18.s:962    .text:000000000000043c .L0 
GAS LISTING /tmp/ccSTET18.s 			page 42


     /tmp/ccSTET18.s:968    .text:0000000000000448 .L0 
     /tmp/ccSTET18.s:969    .text:0000000000000448 .L0 
     /tmp/ccSTET18.s:972    .text:0000000000000454 .L0 
     /tmp/ccSTET18.s:973    .text:0000000000000454 .L0 
     /tmp/ccSTET18.s:978    .text:0000000000000460 .L0 
     /tmp/ccSTET18.s:985    .text:000000000000046c .L0 
     /tmp/ccSTET18.s:986    .text:000000000000046c .L0 
     /tmp/ccSTET18.s:1230   .bss._ZZN9Scheduler11getInstanceEvE8instance:0000000000000000 _ZZN9Scheduler11getInstanceEvE8instance
     /tmp/ccSTET18.s:991    .text:0000000000000480 .L0 
     /tmp/ccSTET18.s:995    .text:0000000000000488 .L0 
     /tmp/ccSTET18.s:996    .text:0000000000000488 .L0 
     /tmp/ccSTET18.s:997    .text:0000000000000488 .L0 
     /tmp/ccSTET18.s:1000   .text:0000000000000490 .L0 
     /tmp/ccSTET18.s:1001   .text:0000000000000490 .L0 
     /tmp/ccSTET18.s:1003   .text:0000000000000494 .L0 
     /tmp/ccSTET18.s:1006   .text:0000000000000498 .L0 
     /tmp/ccSTET18.s:1007   .text:0000000000000498 .L0 
     /tmp/ccSTET18.s:1008   .text:0000000000000498 .L0 
     /tmp/ccSTET18.s:1011   .text:00000000000004a0 .L0 
     /tmp/ccSTET18.s:1012   .text:00000000000004a0 .L0 
     /tmp/ccSTET18.s:1014   .text:00000000000004a4 .L0 
     /tmp/ccSTET18.s:1017   .text:00000000000004a8 .L0 
     /tmp/ccSTET18.s:1018   .text:00000000000004a8 .L0 
     /tmp/ccSTET18.s:1019   .text:00000000000004a8 .L0 
     /tmp/ccSTET18.s:1024   .text:00000000000004ac .L0 
     /tmp/ccSTET18.s:1025   .text:00000000000004ac .L0 
     /tmp/ccSTET18.s:1031   .text:00000000000004b4 .L0 
     /tmp/ccSTET18.s:1032   .text:00000000000004b4 .L0 
     /tmp/ccSTET18.s:1209   .bss._ZGVZN14periodicThread11getInstanceEvE8instance:0000000000000000 _ZGVZN14periodicThread11getInstanceEvE8instance
     /tmp/ccSTET18.s:1033   .text:00000000000004b4 .L0 
     /tmp/ccSTET18.s:1043   .text:00000000000004cc .L0 
     /tmp/ccSTET18.s:1216   .bss._ZZN14periodicThread11getInstanceEvE8instance:0000000000000000 _ZZN14periodicThread11getInstanceEvE8instance
     /tmp/ccSTET18.s:1044   .text:00000000000004cc .L0 
     /tmp/ccSTET18.s:1048   .text:00000000000004dc .L0 
     /tmp/ccSTET18.s:1054   .text:00000000000004e0 .L0 
     /tmp/ccSTET18.s:1065   .text:00000000000004f0 .L0 
     /tmp/ccSTET18.s:1066   .text:00000000000004f0 .L0 
     /tmp/ccSTET18.s:1072   .text:00000000000004fc .L0 
     /tmp/ccSTET18.s:1078   .text:0000000000000504 .L0 
     /tmp/ccSTET18.s:1079   .text:0000000000000504 .L0 
     /tmp/ccSTET18.s:1087   .text:0000000000000510 .L0 
     /tmp/ccSTET18.s:1099   .text:0000000000000514 .L0 
     /tmp/ccSTET18.s:1108   .text:0000000000000530 .L0 
     /tmp/ccSTET18.s:1109   .text:0000000000000530 .L0 
     /tmp/ccSTET18.s:1117   .text:0000000000000550 .L0 
     /tmp/ccSTET18.s:1118   .text:0000000000000550 .L0 
     /tmp/ccSTET18.s:1120   .text:0000000000000554 .L0 
     /tmp/ccSTET18.s:1126   .text:000000000000055c .L0 
     /tmp/ccSTET18.s:1127   .text:000000000000055c .L0 
     /tmp/ccSTET18.s:1128   .text:000000000000055c .L0 
     /tmp/ccSTET18.s:1132   .text:000000000000056c .L0 
     /tmp/ccSTET18.s:1138   .text:0000000000000574 .L0 
     /tmp/ccSTET18.s:1139   .text:0000000000000574 .L0 
     /tmp/ccSTET18.s:1140   .text:0000000000000574 .L0 
     /tmp/ccSTET18.s:1151   .text:0000000000000584 .L0 
     /tmp/ccSTET18.s:1152   .text:0000000000000584 .L0 
     /tmp/ccSTET18.s:1153   .text:0000000000000584 .L0 
GAS LISTING /tmp/ccSTET18.s 			page 43


     /tmp/ccSTET18.s:1163   .text:000000000000059c .L0 
     /tmp/ccSTET18.s:1164   .text:000000000000059c .L0 
     /tmp/ccSTET18.s:1170   .text:00000000000005ac .L0 
     /tmp/ccSTET18.s:1171   .text:00000000000005ac .L0 
     /tmp/ccSTET18.s:1172   .text:00000000000005ac .L0 
     /tmp/ccSTET18.s:1175   .text:00000000000005b4 .L0 
     /tmp/ccSTET18.s:1187   .text:00000000000005b8 .L0 
     /tmp/ccSTET18.s:1252   .text:00000000000005b8 .L0 
     /tmp/ccSTET18.s:286    .text:0000000000000110 .L0 
     /tmp/ccSTET18.s:297    .text:000000000000012c .L0 
     /tmp/ccSTET18.s:458    .rodata:0000000000000000 .L14
     /tmp/ccSTET18.s:450    .text:00000000000001c0 .L0 
     /tmp/ccSTET18.s:665    .text:0000000000000224 .L0 
     /tmp/ccSTET18.s:673    .text:0000000000000230 .L0 
     /tmp/ccSTET18.s:678    .text:000000000000023c .L0 
     /tmp/ccSTET18.s:702    .text:0000000000000268 .L0 
     /tmp/ccSTET18.s:718    .text:0000000000000280 .L0 
     /tmp/ccSTET18.s:725    .text:000000000000028c .L0 
     /tmp/ccSTET18.s:738    .text:00000000000002a0 .L0 
     /tmp/ccSTET18.s:746    .text:00000000000002ac .L0 
     /tmp/ccSTET18.s:751    .text:00000000000002b8 .L0 
     /tmp/ccSTET18.s:775    .text:00000000000002e4 .L0 
     /tmp/ccSTET18.s:791    .text:00000000000002fc .L0 
     /tmp/ccSTET18.s:798    .text:0000000000000308 .L0 
     /tmp/ccSTET18.s:896    .text:00000000000003b4 .L0 
     /tmp/ccSTET18.s:903    .text:00000000000003c0 .L0 
     /tmp/ccSTET18.s:913    .text:00000000000003d4 .L0 
     /tmp/ccSTET18.s:917    .text:00000000000003e8 .L0 
     /tmp/ccSTET18.s:928    .text:00000000000003f4 .L0 
     /tmp/ccSTET18.s:936    .text:0000000000000404 .L0 
     /tmp/ccSTET18.s:946    .text:000000000000041c .L0 
     /tmp/ccSTET18.s:950    .text:0000000000000430 .L0 
     /tmp/ccSTET18.s:962    .text:000000000000043c .L0 
     /tmp/ccSTET18.s:969    .text:0000000000000448 .L0 
     /tmp/ccSTET18.s:973    .text:0000000000000454 .L0 
     /tmp/ccSTET18.s:979    .text:0000000000000464 .L0 
     /tmp/ccSTET18.s:987    .text:0000000000000470 .L0 
     /tmp/ccSTET18.s:1033   .text:00000000000004b4 .L0 
     /tmp/ccSTET18.s:1037   .text:00000000000004c4 .L0 
     /tmp/ccSTET18.s:1044   .text:00000000000004cc .L0 
     /tmp/ccSTET18.s:1099   .text:0000000000000514 .L0 
     /tmp/ccSTET18.s:1103   .text:0000000000000528 .L0 
     /tmp/ccSTET18.s:1109   .text:0000000000000530 .L0 
     /tmp/ccSTET18.s:1112   .text:0000000000000540 .L0 
     /tmp/ccSTET18.s:1128   .text:000000000000055c .L0 
     /tmp/ccSTET18.s:1140   .text:0000000000000574 .L0 
     /tmp/ccSTET18.s:1153   .text:0000000000000584 .L0 
     /tmp/ccSTET18.s:1157   .text:0000000000000594 .L0 
     /tmp/ccSTET18.s:1164   .text:000000000000059c .L0 
     /tmp/ccSTET18.s:266    .text:0000000000000108 .L47
     /tmp/ccSTET18.s:391    .text:0000000000000184 .L48
     /tmp/ccSTET18.s:1060   .text:00000000000004f0 .L49
     /tmp/ccSTET18.s:247    .text:00000000000000f0 .L7
     /tmp/ccSTET18.s:573    .text:00000000000001d8 .L11
     /tmp/ccSTET18.s:1050   .text:00000000000004e0 .L44
     /tmp/ccSTET18.s:1056   .text:00000000000004e8 .L45
     /tmp/ccSTET18.s:596    .text:00000000000001f4 .L50
GAS LISTING /tmp/ccSTET18.s 			page 44


     /tmp/ccSTET18.s:602    .text:00000000000001f8 .L12
     /tmp/ccSTET18.s:719    .text:0000000000000288 .L31
     /tmp/ccSTET18.s:697    .text:0000000000000264 .L32
     /tmp/ccSTET18.s:792    .text:0000000000000304 .L33
     /tmp/ccSTET18.s:770    .text:00000000000002e0 .L34
     /tmp/ccSTET18.s:909    .text:00000000000003d4 .L51
     /tmp/ccSTET18.s:898    .text:00000000000003c0 .L35
     /tmp/ccSTET18.s:942    .text:000000000000041c .L52
     /tmp/ccSTET18.s:930    .text:0000000000000400 .L36
     /tmp/ccSTET18.s:981    .text:000000000000046c .L37
     /tmp/ccSTET18.s:1039   .text:00000000000004cc .L38
     /tmp/ccSTET18.s:576    .text:00000000000001e0 .L30
     /tmp/ccSTET18.s:1122   .text:000000000000055c .L41
     /tmp/ccSTET18.s:1143   .text:0000000000000584 .L53
     /tmp/ccSTET18.s:1075   .text:0000000000000504 .L39
     /tmp/ccSTET18.s:1104   .text:0000000000000530 .L40
     /tmp/ccSTET18.s:1088   .text:0000000000000514 .L54
     /tmp/ccSTET18.s:1159   .text:000000000000059c .L42
     /tmp/ccSTET18.s:655    .text:0000000000000224 .L29
     /tmp/ccSTET18.s:731    .text:00000000000002a0 .L28
     /tmp/ccSTET18.s:804    .text:000000000000031c .L27
     /tmp/ccSTET18.s:819    .text:0000000000000340 .L26
     /tmp/ccSTET18.s:828    .text:000000000000034c .L25
     /tmp/ccSTET18.s:837    .text:000000000000035c .L24
     /tmp/ccSTET18.s:848    .text:0000000000000370 .L23
     /tmp/ccSTET18.s:858    .text:0000000000000380 .L22
     /tmp/ccSTET18.s:868    .text:0000000000000390 .L21
     /tmp/ccSTET18.s:878    .text:00000000000003a0 .L20
     /tmp/ccSTET18.s:888    .text:00000000000003b4 .L19
     /tmp/ccSTET18.s:919    .text:00000000000003f4 .L18
     /tmp/ccSTET18.s:952    .text:000000000000043c .L17
     /tmp/ccSTET18.s:993    .text:0000000000000488 .L16
     /tmp/ccSTET18.s:1004   .text:0000000000000498 .L15
     /tmp/ccSTET18.s:1015   .text:00000000000004a8 .L13
     /tmp/ccSTET18.s:4336   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccSTET18.s:6402   .debug_str:0000000000000f42 .LASF277
     /tmp/ccSTET18.s:6484   .debug_str:00000000000012b3 .LASF278
     /tmp/ccSTET18.s:5990   .debug_str:00000000000000cd .LASF279
     /tmp/ccSTET18.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccSTET18.s:1247   .text:00000000000005b8 .Letext0
     /tmp/ccSTET18.s:5960   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccSTET18.s:6124   .debug_str:0000000000000598 .LASF0
     /tmp/ccSTET18.s:6156   .debug_str:00000000000006b7 .LASF1
     /tmp/ccSTET18.s:6322   .debug_str:0000000000000d2d .LASF2
     /tmp/ccSTET18.s:6336   .debug_str:0000000000000da0 .LASF4
     /tmp/ccSTET18.s:6136   .debug_str:00000000000005f8 .LASF3
     /tmp/ccSTET18.s:5980   .debug_str:0000000000000092 .LASF5
     /tmp/ccSTET18.s:6258   .debug_str:0000000000000ac6 .LASF6
     /tmp/ccSTET18.s:6150   .debug_str:000000000000068c .LASF7
     /tmp/ccSTET18.s:6086   .debug_str:000000000000040c .LASF8
     /tmp/ccSTET18.s:6092   .debug_str:0000000000000444 .LASF9
     /tmp/ccSTET18.s:6014   .debug_str:00000000000001a0 .LASF10
     /tmp/ccSTET18.s:6428   .debug_str:000000000000110a .LASF11
     /tmp/ccSTET18.s:6074   .debug_str:00000000000003b3 .LASF12
     /tmp/ccSTET18.s:6028   .debug_str:000000000000020e .LASF13
     /tmp/ccSTET18.s:6012   .debug_str:0000000000000190 .LASF14
     /tmp/ccSTET18.s:6380   .debug_str:0000000000000ec7 .LASF15
GAS LISTING /tmp/ccSTET18.s 			page 45


     /tmp/ccSTET18.s:6056   .debug_str:00000000000002f2 .LASF16
     /tmp/ccSTET18.s:6366   .debug_str:0000000000000e74 .LASF17
     /tmp/ccSTET18.s:6466   .debug_str:0000000000001220 .LASF70
     /tmp/ccSTET18.s:6290   .debug_str:0000000000000c35 .LASF21
     /tmp/ccSTET18.s:6162   .debug_str:00000000000006da .LASF18
     /tmp/ccSTET18.s:6064   .debug_str:000000000000034e .LASF19
     /tmp/ccSTET18.s:6488   .debug_str:00000000000012cd .LASF20
     /tmp/ccSTET18.s:6448   .debug_str:000000000000118f .LASF22
     /tmp/ccSTET18.s:6068   .debug_str:0000000000000373 .LASF23
     /tmp/ccSTET18.s:6400   .debug_str:0000000000000f35 .LASF24
     /tmp/ccSTET18.s:6042   .debug_str:000000000000027d .LASF25
     /tmp/ccSTET18.s:6442   .debug_str:0000000000001151 .LASF26
     /tmp/ccSTET18.s:6122   .debug_str:000000000000057c .LASF28
     /tmp/ccSTET18.s:5964   .debug_str:0000000000000019 .LASF27
     /tmp/ccSTET18.s:6206   .debug_str:00000000000008bf .LASF29
     /tmp/ccSTET18.s:6348   .debug_str:0000000000000de5 .LASF30
     /tmp/ccSTET18.s:6062   .debug_str:0000000000000333 .LASF31
     /tmp/ccSTET18.s:6128   .debug_str:00000000000005b6 .LASF32
     /tmp/ccSTET18.s:6478   .debug_str:0000000000001282 .LASF33
     /tmp/ccSTET18.s:6106   .debug_str:00000000000004d9 .LASF34
     /tmp/ccSTET18.s:6118   .debug_str:0000000000000544 .LASF35
     /tmp/ccSTET18.s:6436   .debug_str:0000000000001134 .LASF36
     /tmp/ccSTET18.s:6422   .debug_str:00000000000010b6 .LASF38
     /tmp/ccSTET18.s:6316   .debug_str:0000000000000d07 .LASF40
     /tmp/ccSTET18.s:6238   .debug_str:0000000000000a0f .LASF42
     /tmp/ccSTET18.s:6280   .debug_str:0000000000000bd8 .LASF37
     /tmp/ccSTET18.s:6284   .debug_str:0000000000000c04 .LASF39
     /tmp/ccSTET18.s:6228   .debug_str:000000000000099e .LASF41
     /tmp/ccSTET18.s:6152   .debug_str:000000000000069f .LASF43
     /tmp/ccSTET18.s:6482   .debug_str:00000000000012ab .LASF44
     /tmp/ccSTET18.s:6410   .debug_str:0000000000001039 .LASF45
     /tmp/ccSTET18.s:6220   .debug_str:0000000000000971 .LASF46
     /tmp/ccSTET18.s:6236   .debug_str:00000000000009fb .LASF47
     /tmp/ccSTET18.s:6172   .debug_str:0000000000000735 .LASF48
     /tmp/ccSTET18.s:6288   .debug_str:0000000000000c21 .LASF49
     /tmp/ccSTET18.s:6518   .debug_str:00000000000013d6 .LASF50
     /tmp/ccSTET18.s:6132   .debug_str:00000000000005c9 .LASF51
     /tmp/ccSTET18.s:6376   .debug_str:0000000000000eb2 .LASF52
     /tmp/ccSTET18.s:6342   .debug_str:0000000000000dc2 .LASF53
     /tmp/ccSTET18.s:6344   .debug_str:0000000000000dd5 .LASF54
     /tmp/ccSTET18.s:6020   .debug_str:00000000000001c6 .LASF55
     /tmp/ccSTET18.s:6052   .debug_str:00000000000002e4 .LASF56
     /tmp/ccSTET18.s:6114   .debug_str:0000000000000517 .LASF57
     /tmp/ccSTET18.s:6130   .debug_str:00000000000005c3 .LASF58
     /tmp/ccSTET18.s:6044   .debug_str:0000000000000289 .LASF59
     /tmp/ccSTET18.s:5982   .debug_str:0000000000000099 .LASF60
     /tmp/ccSTET18.s:6328   .debug_str:0000000000000d52 .LASF61
     /tmp/ccSTET18.s:6320   .debug_str:0000000000000d22 .LASF62
     /tmp/ccSTET18.s:6506   .debug_str:000000000000135e .LASF63
     /tmp/ccSTET18.s:6468   .debug_str:0000000000001226 .LASF64
     /tmp/ccSTET18.s:6490   .debug_str:00000000000012d6 .LASF65
     /tmp/ccSTET18.s:6458   .debug_str:00000000000011cf .LASF66
     /tmp/ccSTET18.s:6198   .debug_str:0000000000000859 .LASF67
     /tmp/ccSTET18.s:6432   .debug_str:000000000000111e .LASF68
     /tmp/ccSTET18.s:6090   .debug_str:0000000000000428 .LASF69
     /tmp/ccSTET18.s:6260   .debug_str:0000000000000ad9 .LASF149
     /tmp/ccSTET18.s:6146   .debug_str:000000000000064d .LASF151
GAS LISTING /tmp/ccSTET18.s 			page 46


     /tmp/ccSTET18.s:6252   .debug_str:0000000000000a92 .LASF71
     /tmp/ccSTET18.s:6396   .debug_str:0000000000000f25 .LASF92
     /tmp/ccSTET18.s:6154   .debug_str:00000000000006b2 .LASF72
     /tmp/ccSTET18.s:6016   .debug_str:00000000000001af .LASF73
     /tmp/ccSTET18.s:5996   .debug_str:0000000000000120 .LASF74
     /tmp/ccSTET18.s:6486   .debug_str:00000000000012c1 .LASF75
     /tmp/ccSTET18.s:6200   .debug_str:000000000000086f .LASF76
     /tmp/ccSTET18.s:6138   .debug_str:000000000000060a .LASF78
     /tmp/ccSTET18.s:6326   .debug_str:0000000000000d48 .LASF77
     /tmp/ccSTET18.s:6444   .debug_str:0000000000001160 .LASF79
     /tmp/ccSTET18.s:6032   .debug_str:0000000000000231 .LASF80
     /tmp/ccSTET18.s:6196   .debug_str:0000000000000834 .LASF81
     /tmp/ccSTET18.s:5988   .debug_str:00000000000000c1 .LASF82
     /tmp/ccSTET18.s:6282   .debug_str:0000000000000bdf .LASF83
     /tmp/ccSTET18.s:6362   .debug_str:0000000000000e50 .LASF84
     /tmp/ccSTET18.s:5992   .debug_str:0000000000000101 .LASF147
     /tmp/ccSTET18.s:6084   .debug_str:0000000000000402 .LASF85
     /tmp/ccSTET18.s:6148   .debug_str:000000000000066f .LASF86
     /tmp/ccSTET18.s:6010   .debug_str:000000000000017b .LASF87
     /tmp/ccSTET18.s:6334   .debug_str:0000000000000d8b .LASF88
     /tmp/ccSTET18.s:6502   .debug_str:0000000000001344 .LASF168
     /tmp/ccSTET18.s:6112   .debug_str:00000000000004ff .LASF180
     /tmp/ccSTET18.s:6496   .debug_str:0000000000001317 .LASF89
     /tmp/ccSTET18.s:6372   .debug_str:0000000000000ea2 .LASF90
     /tmp/ccSTET18.s:6222   .debug_str:0000000000000979 .LASF91
     /tmp/ccSTET18.s:6388   .debug_str:0000000000000ef8 .LASF93
     /tmp/ccSTET18.s:6338   .debug_str:0000000000000da7 .LASF94
     /tmp/ccSTET18.s:5978   .debug_str:0000000000000086 .LASF96
     /tmp/ccSTET18.s:6378   .debug_str:0000000000000eb9 .LASF95
     /tmp/ccSTET18.s:6246   .debug_str:0000000000000a4a .LASF97
     /tmp/ccSTET18.s:6190   .debug_str:00000000000007ec .LASF98
     /tmp/ccSTET18.s:6072   .debug_str:000000000000039c .LASF99
     /tmp/ccSTET18.s:6294   .debug_str:0000000000000c4a .LASF100
     /tmp/ccSTET18.s:6352   .debug_str:0000000000000e03 .LASF101
     /tmp/ccSTET18.s:6310   .debug_str:0000000000000cd0 .LASF102
     /tmp/ccSTET18.s:6340   .debug_str:0000000000000dac .LASF103
     /tmp/ccSTET18.s:6454   .debug_str:00000000000011ba .LASF104
     /tmp/ccSTET18.s:6036   .debug_str:000000000000024b .LASF105
     /tmp/ccSTET18.s:6296   .debug_str:0000000000000c5a .LASF106
     /tmp/ccSTET18.s:6214   .debug_str:0000000000000935 .LASF107
     /tmp/ccSTET18.s:6274   .debug_str:0000000000000b88 .LASF108
     /tmp/ccSTET18.s:6120   .debug_str:000000000000055c .LASF109
     /tmp/ccSTET18.s:6446   .debug_str:000000000000117c .LASF110
     /tmp/ccSTET18.s:6272   .debug_str:0000000000000b69 .LASF111
     /tmp/ccSTET18.s:6382   .debug_str:0000000000000ed3 .LASF112
     /tmp/ccSTET18.s:6308   .debug_str:0000000000000cb4 .LASF113
     /tmp/ccSTET18.s:6142   .debug_str:000000000000062f .LASF114
     /tmp/ccSTET18.s:6242   .debug_str:0000000000000a2a .LASF115
     /tmp/ccSTET18.s:6060   .debug_str:0000000000000322 .LASF116
     /tmp/ccSTET18.s:6404   .debug_str:0000000000001006 .LASF117
     /tmp/ccSTET18.s:6370   .debug_str:0000000000000e91 .LASF118
     /tmp/ccSTET18.s:6070   .debug_str:000000000000037f .LASF119
     /tmp/ccSTET18.s:6508   .debug_str:0000000000001376 .LASF120
     /tmp/ccSTET18.s:6364   .debug_str:0000000000000e5a .LASF121
     /tmp/ccSTET18.s:6414   .debug_str:000000000000105c .LASF122
     /tmp/ccSTET18.s:6298   .debug_str:0000000000000c66 .LASF123
     /tmp/ccSTET18.s:6144   .debug_str:000000000000063e .LASF124
GAS LISTING /tmp/ccSTET18.s 			page 47


     /tmp/ccSTET18.s:6058   .debug_str:0000000000000308 .LASF125
     /tmp/ccSTET18.s:6412   .debug_str:000000000000104d .LASF126
     /tmp/ccSTET18.s:6134   .debug_str:00000000000005dd .LASF127
     /tmp/ccSTET18.s:6452   .debug_str:00000000000011ad .LASF128
     /tmp/ccSTET18.s:6424   .debug_str:00000000000010cb .LASF129
     /tmp/ccSTET18.s:6350   .debug_str:0000000000000df3 .LASF130
     /tmp/ccSTET18.s:6180   .debug_str:0000000000000775 .LASF131
     /tmp/ccSTET18.s:6224   .debug_str:000000000000097e .LASF132
     /tmp/ccSTET18.s:6266   .debug_str:0000000000000b1f .LASF133
     /tmp/ccSTET18.s:6160   .debug_str:00000000000006d4 .LASF134
     /tmp/ccSTET18.s:6314   .debug_str:0000000000000cf7 .LASF135
     /tmp/ccSTET18.s:6510   .debug_str:0000000000001384 .LASF136
     /tmp/ccSTET18.s:6088   .debug_str:000000000000041c .LASF137
     /tmp/ccSTET18.s:6006   .debug_str:0000000000000164 .LASF138
     /tmp/ccSTET18.s:6082   .debug_str:00000000000003f6 .LASF139
     /tmp/ccSTET18.s:5972   .debug_str:000000000000004f .LASF140
     /tmp/ccSTET18.s:6182   .debug_str:0000000000000792 .LASF141
     /tmp/ccSTET18.s:6216   .debug_str:000000000000094d .LASF142
     /tmp/ccSTET18.s:6324   .debug_str:0000000000000d3b .LASF143
     /tmp/ccSTET18.s:6398   .debug_str:0000000000000f2d .LASF144
     /tmp/ccSTET18.s:6078   .debug_str:00000000000003d3 .LASF145
     /tmp/ccSTET18.s:6230   .debug_str:00000000000009a5 .LASF171
     /tmp/ccSTET18.s:6244   .debug_str:0000000000000a45 .LASF280
     /tmp/ccSTET18.s:6178   .debug_str:0000000000000766 .LASF146
     /tmp/ccSTET18.s:6164   .debug_str:00000000000006e3 .LASF148
     /tmp/ccSTET18.s:6050   .debug_str:00000000000002d5 .LASF150
     /tmp/ccSTET18.s:6208   .debug_str:00000000000008e2 .LASF152
     /tmp/ccSTET18.s:6176   .debug_str:0000000000000753 .LASF153
     /tmp/ccSTET18.s:5970   .debug_str:000000000000004a .LASF154
     /tmp/ccSTET18.s:6140   .debug_str:0000000000000626 .LASF155
     /tmp/ccSTET18.s:6504   .debug_str:0000000000001358 .LASF156
     /tmp/ccSTET18.s:6420   .debug_str:00000000000010ae .LASF157
     /tmp/ccSTET18.s:6386   .debug_str:0000000000000eef .LASF158
     /tmp/ccSTET18.s:6390   .debug_str:0000000000000f00 .LASF159
     /tmp/ccSTET18.s:6110   .debug_str:00000000000004f4 .LASF160
     /tmp/ccSTET18.s:6034   .debug_str:000000000000023e .LASF161
     /tmp/ccSTET18.s:5994   .debug_str:000000000000011a .LASF162
     /tmp/ccSTET18.s:6302   .debug_str:0000000000000c86 .LASF163
     /tmp/ccSTET18.s:6356   .debug_str:0000000000000e3c .LASF164
     /tmp/ccSTET18.s:6166   .debug_str:000000000000070c .LASF165
     /tmp/ccSTET18.s:6330   .debug_str:0000000000000d6a .LASF166
     /tmp/ccSTET18.s:6270   .debug_str:0000000000000b53 .LASF167
     /tmp/ccSTET18.s:5966   .debug_str:000000000000002f .LASF169
     /tmp/ccSTET18.s:5986   .debug_str:00000000000000b3 .LASF170
     /tmp/ccSTET18.s:6498   .debug_str:0000000000001329 .LASF172
     /tmp/ccSTET18.s:6332   .debug_str:0000000000000d76 .LASF173
     /tmp/ccSTET18.s:6212   .debug_str:0000000000000916 .LASF174
     /tmp/ccSTET18.s:6374   .debug_str:0000000000000ea7 .LASF175
     /tmp/ccSTET18.s:6234   .debug_str:00000000000009ec .LASF176
     /tmp/ccSTET18.s:6104   .debug_str:00000000000004b6 .LASF177
     /tmp/ccSTET18.s:6202   .debug_str:0000000000000893 .LASF178
     /tmp/ccSTET18.s:6116   .debug_str:0000000000000529 .LASF179
     /tmp/ccSTET18.s:6462   .debug_str:00000000000011e7 .LASF181
     /tmp/ccSTET18.s:6210   .debug_str:00000000000008fc .LASF182
     /tmp/ccSTET18.s:6268   .debug_str:0000000000000b3b .LASF183
     /tmp/ccSTET18.s:6300   .debug_str:0000000000000c81 .LASF184
     /tmp/ccSTET18.s:6022   .debug_str:00000000000001d9 .LASF185
GAS LISTING /tmp/ccSTET18.s 			page 48


     /tmp/ccSTET18.s:6304   .debug_str:0000000000000c91 .LASF186
     /tmp/ccSTET18.s:6038   .debug_str:0000000000000263 .LASF187
     /tmp/ccSTET18.s:6430   .debug_str:0000000000001115 .LASF188
     /tmp/ccSTET18.s:6026   .debug_str:00000000000001ee .LASF189
     /tmp/ccSTET18.s:6286   .debug_str:0000000000000c17 .LASF190
     /tmp/ccSTET18.s:6186   .debug_str:00000000000007ba .LASF191
     /tmp/ccSTET18.s:6522   .debug_str:00000000000013e8 .LASF192
     /tmp/ccSTET18.s:6080   .debug_str:00000000000003d8 .LASF193
     /tmp/ccSTET18.s:6100   .debug_str:00000000000004a3 .LASF194
     /tmp/ccSTET18.s:6094   .debug_str:0000000000000452 .LASF195
     /tmp/ccSTET18.s:6438   .debug_str:000000000000113d .LASF196
     /tmp/ccSTET18.s:6426   .debug_str:00000000000010e3 .LASF197
     /tmp/ccSTET18.s:6394   .debug_str:0000000000000f14 .LASF198
     /tmp/ccSTET18.s:6514   .debug_str:0000000000001399 .LASF199
     /tmp/ccSTET18.s:6240   .debug_str:0000000000000a24 .LASF200
     /tmp/ccSTET18.s:6002   .debug_str:000000000000013d .LASF201
     /tmp/ccSTET18.s:5974   .debug_str:000000000000005f .LASF202
     /tmp/ccSTET18.s:6472   .debug_str:0000000000001245 .LASF203
     /tmp/ccSTET18.s:6004   .debug_str:0000000000000156 .LASF204
     /tmp/ccSTET18.s:6264   .debug_str:0000000000000afc .LASF205
     /tmp/ccSTET18.s:6460   .debug_str:00000000000011d9 .LASF206
     /tmp/ccSTET18.s:6098   .debug_str:0000000000000481 .LASF207
     /tmp/ccSTET18.s:6102   .debug_str:00000000000004ae .LASF208
     /tmp/ccSTET18.s:6066   .debug_str:0000000000000357 .LASF209
     /tmp/ccSTET18.s:6054   .debug_str:00000000000002ea .LASF210
     /tmp/ccSTET18.s:6464   .debug_str:0000000000001205 .LASF211
     /tmp/ccSTET18.s:6470   .debug_str:0000000000001230 .LASF212
     /tmp/ccSTET18.s:6250   .debug_str:0000000000000a7d .LASF213
     /tmp/ccSTET18.s:6174   .debug_str:000000000000073d .LASF214
     /tmp/ccSTET18.s:6306   .debug_str:0000000000000c9e .LASF215
     /tmp/ccSTET18.s:6168   .debug_str:0000000000000715 .LASF216
     /tmp/ccSTET18.s:6520   .debug_str:00000000000013de .LASF217
     /tmp/ccSTET18.s:6346   .debug_str:0000000000000ddc .LASF218
     /tmp/ccSTET18.s:6360   .debug_str:0000000000000e49 .LASF219
     /tmp/ccSTET18.s:5984   .debug_str:00000000000000a4 .LASF220
     /tmp/ccSTET18.s:6194   .debug_str:0000000000000826 .LASF221
     /tmp/ccSTET18.s:6158   .debug_str:00000000000006ca .LASF222
     /tmp/ccSTET18.s:6248   .debug_str:0000000000000a73 .LASF223
     /tmp/ccSTET18.s:6126   .debug_str:00000000000005a5 .LASF224
     /tmp/ccSTET18.s:6292   .debug_str:0000000000000c40 .LASF225
     /tmp/ccSTET18.s:6076   .debug_str:00000000000003c2 .LASF226
     /tmp/ccSTET18.s:6000   .debug_str:000000000000012a .LASF227
     /tmp/ccSTET18.s:6476   .debug_str:000000000000126f .LASF228
     /tmp/ccSTET18.s:6434   .debug_str:000000000000112d .LASF229
     /tmp/ccSTET18.s:6254   .debug_str:0000000000000aa2 .LASF230
     /tmp/ccSTET18.s:6218   .debug_str:0000000000000960 .LASF231
     /tmp/ccSTET18.s:6204   .debug_str:00000000000008ae .LASF232
     /tmp/ccSTET18.s:6018   .debug_str:00000000000001b4 .LASF233
     /tmp/ccSTET18.s:6046   .debug_str:000000000000029b .LASF234
     /tmp/ccSTET18.s:6456   .debug_str:00000000000011c7 .LASF235
     /tmp/ccSTET18.s:6184   .debug_str:000000000000079f .LASF236
     /tmp/ccSTET18.s:6030   .debug_str:000000000000021e .LASF237
     /tmp/ccSTET18.s:6188   .debug_str:00000000000007d9 .LASF238
     /tmp/ccSTET18.s:6384   .debug_str:0000000000000ee2 .LASF239
     /tmp/ccSTET18.s:6312   .debug_str:0000000000000cdb .LASF240
     /tmp/ccSTET18.s:6474   .debug_str:0000000000001260 .LASF241
     /tmp/ccSTET18.s:6354   .debug_str:0000000000000e1e .LASF242
GAS LISTING /tmp/ccSTET18.s 			page 49


     /tmp/ccSTET18.s:6096   .debug_str:0000000000000473 .LASF243
     /tmp/ccSTET18.s:6418   .debug_str:0000000000001091 .LASF244
     /tmp/ccSTET18.s:6226   .debug_str:000000000000098e .LASF245
     /tmp/ccSTET18.s:5976   .debug_str:0000000000000067 .LASF246
     /tmp/ccSTET18.s:6108   .debug_str:00000000000004e4 .LASF247
     /tmp/ccSTET18.s:6276   .debug_str:0000000000000b9b .LASF248
     /tmp/ccSTET18.s:6480   .debug_str:000000000000129c .LASF249
     /tmp/ccSTET18.s:6278   .debug_str:0000000000000bba .LASF250
     /tmp/ccSTET18.s:6450   .debug_str:000000000000119e .LASF251
     /tmp/ccSTET18.s:6494   .debug_str:00000000000012f9 .LASF252
     /tmp/ccSTET18.s:6408   .debug_str:0000000000001029 .LASF253
     /tmp/ccSTET18.s:5968   .debug_str:000000000000003d .LASF254
     /tmp/ccSTET18.s:6256   .debug_str:0000000000000ab8 .LASF255
     /tmp/ccSTET18.s:6392   .debug_str:0000000000000f0f .LASF256
     /tmp/ccSTET18.s:123    .text:0000000000000060 .LFB76
     /tmp/ccSTET18.s:1188   .text:00000000000005b8 .LFE76
     /tmp/ccSTET18.s:6440   .debug_str:000000000000114c .LASF257
     /tmp/ccSTET18.s:6368   .debug_str:0000000000000e8a .LASF258
     /tmp/ccSTET18.s:5625   .debug_loc:0000000000000000 .LLST2
     /tmp/ccSTET18.s:313    .text:0000000000000144 .LBB217
     /tmp/ccSTET18.s:394    .text:0000000000000184 .LBE217
     /tmp/ccSTET18.s:6406   .debug_str:0000000000001024 .LASF259
     /tmp/ccSTET18.s:6358   .debug_str:0000000000000e41 .LASF260
     /tmp/ccSTET18.s:315    .text:0000000000000144 .LBB218
     /tmp/ccSTET18.s:330    .text:0000000000000150 .LBE218
     /tmp/ccSTET18.s:334    .text:0000000000000154 .LBB220
     /tmp/ccSTET18.s:349    .text:0000000000000160 .LBE220
     /tmp/ccSTET18.s:363    .text:0000000000000174 .LBB222
     /tmp/ccSTET18.s:374    .text:0000000000000178 .LBE222
     /tmp/ccSTET18.s:5644   .debug_loc:000000000000005c .LLST22
     /tmp/ccSTET18.s:379    .text:000000000000017c .LBB224
     /tmp/ccSTET18.s:393    .text:0000000000000184 .LBE224
     /tmp/ccSTET18.s:5651   .debug_loc:000000000000007f .LLST23
     /tmp/ccSTET18.s:358    .text:0000000000000170 .LVL11
     /tmp/ccSTET18.s:398    .text:0000000000000184 .LBB169
     /tmp/ccSTET18.s:1061   .text:00000000000004f0 .LBE169
     /tmp/ccSTET18.s:6008   .debug_str:0000000000000174 .LASF261
     /tmp/ccSTET18.s:5658   .debug_loc:00000000000000a2 .LLST4
     /tmp/ccSTET18.s:401    .text:0000000000000184 .LBB170
     /tmp/ccSTET18.s:416    .text:0000000000000190 .LBE170
     /tmp/ccSTET18.s:422    .text:0000000000000198 .LBB172
     /tmp/ccSTET18.s:437    .text:00000000000001a4 .LBE172
     /tmp/ccSTET18.s:580    .text:00000000000001e0 .LBB174
     /tmp/ccSTET18.s:5928   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccSTET18.s:5756   .debug_loc:000000000000024c .LLST5
     /tmp/ccSTET18.s:5764   .debug_loc:0000000000000270 .LLST6
     /tmp/ccSTET18.s:619    .text:0000000000000204 .LBB178
     /tmp/ccSTET18.s:630    .text:0000000000000208 .LBE178
     /tmp/ccSTET18.s:5772   .debug_loc:0000000000000295 .LLST7
     /tmp/ccSTET18.s:643    .text:000000000000021c .LBB180
     /tmp/ccSTET18.s:657    .text:0000000000000224 .LBE180
     /tmp/ccSTET18.s:5779   .debug_loc:00000000000002b8 .LLST8
     /tmp/ccSTET18.s:660    .text:0000000000000224 .LBB182
     /tmp/ccSTET18.s:722    .text:0000000000000288 .LBE182
     /tmp/ccSTET18.s:668    .text:0000000000000230 .LBB184
     /tmp/ccSTET18.s:715    .text:000000000000027c .LBE184
     /tmp/ccSTET18.s:5786   .debug_loc:00000000000002db .LLST9
GAS LISTING /tmp/ccSTET18.s 			page 50


     /tmp/ccSTET18.s:670    .text:0000000000000230 .LBB186
     /tmp/ccSTET18.s:713    .text:000000000000027c .LBE186
     /tmp/ccSTET18.s:5795   .debug_loc:0000000000000307 .LLST10
     /tmp/ccSTET18.s:5802   .debug_loc:000000000000032a .LLST11
     /tmp/ccSTET18.s:5809   .debug_loc:000000000000034d .LLST12
     /tmp/ccSTET18.s:734    .text:00000000000002a0 .LBB187
     /tmp/ccSTET18.s:795    .text:0000000000000304 .LBE187
     /tmp/ccSTET18.s:741    .text:00000000000002ac .LBB189
     /tmp/ccSTET18.s:788    .text:00000000000002f8 .LBE189
     /tmp/ccSTET18.s:5816   .debug_loc:0000000000000370 .LLST13
     /tmp/ccSTET18.s:743    .text:00000000000002ac .LBB191
     /tmp/ccSTET18.s:786    .text:00000000000002f8 .LBE191
     /tmp/ccSTET18.s:5825   .debug_loc:000000000000039c .LLST14
     /tmp/ccSTET18.s:5832   .debug_loc:00000000000003bf .LLST15
     /tmp/ccSTET18.s:5839   .debug_loc:00000000000003e2 .LLST16
     /tmp/ccSTET18.s:891    .text:00000000000003b4 .LBB192
     /tmp/ccSTET18.s:915    .text:00000000000003e4 .LVL58
     /tmp/ccSTET18.s:924    .text:00000000000003f4 .LBB196
     /tmp/ccSTET18.s:948    .text:000000000000042c .LVL60
     /tmp/ccSTET18.s:957    .text:000000000000043c .LBB200
     /tmp/ccSTET18.s:984    .text:000000000000046c .LBE200
     /tmp/ccSTET18.s:965    .text:0000000000000448 .LBB202
     /tmp/ccSTET18.s:976    .text:0000000000000460 .LBE202
     /tmp/ccSTET18.s:5846   .debug_loc:0000000000000405 .LLST17
     /tmp/ccSTET18.s:1021   .text:00000000000004ac .LBB204
     /tmp/ccSTET18.s:1052   .text:00000000000004e0 .LBE204
     /tmp/ccSTET18.s:5855   .debug_loc:0000000000000431 .LLST18
     /tmp/ccSTET18.s:5863   .debug_loc:0000000000000455 .LLST19
     /tmp/ccSTET18.s:1028   .text:00000000000004b4 .LBB206
     /tmp/ccSTET18.s:1042   .text:00000000000004cc .LBE206
     /tmp/ccSTET18.s:1046   .text:00000000000004dc .LVL69
     /tmp/ccSTET18.s:727    .text:000000000000029c .LVL31
     /tmp/ccSTET18.s:800    .text:0000000000000318 .LVL40
     /tmp/ccSTET18.s:815    .text:000000000000033c .LVL42
     /tmp/ccSTET18.s:824    .text:0000000000000348 .LVL44
     /tmp/ccSTET18.s:833    .text:0000000000000354 .LVL46
     /tmp/ccSTET18.s:844    .text:000000000000036c .LVL47
     /tmp/ccSTET18.s:854    .text:000000000000037c .LVL49
     /tmp/ccSTET18.s:864    .text:000000000000038c .LVL51
     /tmp/ccSTET18.s:874    .text:000000000000039c .LVL53
     /tmp/ccSTET18.s:884    .text:00000000000003ac .LVL55
     /tmp/ccSTET18.s:905    .text:00000000000003d0 .LVL56
     /tmp/ccSTET18.s:938    .text:0000000000000414 .LVL59
     /tmp/ccSTET18.s:989    .text:0000000000000480 .LVL63
     /tmp/ccSTET18.s:998    .text:0000000000000490 .LVL64
     /tmp/ccSTET18.s:1009   .text:00000000000004a0 .LVL65
     /tmp/ccSTET18.s:5875   .debug_loc:000000000000048d .LLST3
     /tmp/ccSTET18.s:1147   .text:0000000000000584 .LBB159
     /tmp/ccSTET18.s:1178   .text:00000000000005b8 .LBE159
     /tmp/ccSTET18.s:1149   .text:0000000000000584 .LBB160
     /tmp/ccSTET18.s:1162   .text:000000000000059c .LBE160
     /tmp/ccSTET18.s:1168   .text:00000000000005ac .LBB162
     /tmp/ccSTET18.s:1177   .text:00000000000005b8 .LBE162
     /tmp/ccSTET18.s:1166   .text:00000000000005ac .LVL80
     /tmp/ccSTET18.s:1096   .text:0000000000000514 .LBB155
     /tmp/ccSTET18.s:1101   .text:0000000000000524 .LVL76
     /tmp/ccSTET18.s:1067   .text:00000000000004f8 .LVL72
GAS LISTING /tmp/ccSTET18.s 			page 51


     /tmp/ccSTET18.s:1081   .text:0000000000000510 .LVL75
     /tmp/ccSTET18.s:1114   .text:0000000000000550 .LVL77
     /tmp/ccSTET18.s:204    .text:00000000000000b8 .LBB146
     /tmp/ccSTET18.s:220    .text:00000000000000c4 .LBE146
     /tmp/ccSTET18.s:271    .text:0000000000000108 .LBB212
     /tmp/ccSTET18.s:283    .text:0000000000000110 .LBE212
     /tmp/ccSTET18.s:5882   .debug_loc:00000000000004b0 .LLST20
     /tmp/ccSTET18.s:300    .text:0000000000000138 .LBB215
     /tmp/ccSTET18.s:308    .text:000000000000013c .LBE215
     /tmp/ccSTET18.s:5890   .debug_loc:00000000000004d4 .LLST21
     /tmp/ccSTET18.s:293    .text:000000000000012c .LVL8
     /tmp/ccSTET18.s:88     .text:0000000000000040 .LFB75
     /tmp/ccSTET18.s:117    .text:0000000000000060 .LFE75
     /tmp/ccSTET18.s:50     .text:0000000000000020 .LFB74
     /tmp/ccSTET18.s:82     .text:0000000000000040 .LFE74
     /tmp/ccSTET18.s:61     .text:000000000000002c .LBB77
     /tmp/ccSTET18.s:73     .text:0000000000000034 .LBE77
     /tmp/ccSTET18.s:5897   .debug_loc:00000000000004f7 .LLST1
     /tmp/ccSTET18.s:10     .text:0000000000000000 .LFB73
     /tmp/ccSTET18.s:44     .text:0000000000000020 .LFE73
     /tmp/ccSTET18.s:22     .text:000000000000000c .LBB75
     /tmp/ccSTET18.s:35     .text:0000000000000014 .LBE75
     /tmp/ccSTET18.s:5906   .debug_loc:000000000000051d .LLST0
     /tmp/ccSTET18.s:6024   .debug_str:00000000000001e5 .LASF263
     /tmp/ccSTET18.s:6416   .debug_str:000000000000106b .LASF264
     /tmp/ccSTET18.s:6040   .debug_str:0000000000000278 .LASF262
     /tmp/ccSTET18.s:6516   .debug_str:00000000000013be .LASF266
     /tmp/ccSTET18.s:6192   .debug_str:00000000000007f8 .LASF265
     /tmp/ccSTET18.s:6318   .debug_str:0000000000000d10 .LASF267
     /tmp/ccSTET18.s:6048   .debug_str:00000000000002ad .LASF268
     /tmp/ccSTET18.s:6500   .debug_str:000000000000133a .LASF269
     /tmp/ccSTET18.s:6512   .debug_str:0000000000001391 .LASF270
     /tmp/ccSTET18.s:6492   .debug_str:00000000000012ec .LASF271
     /tmp/ccSTET18.s:5962   .debug_str:0000000000000000 .LASF272
     /tmp/ccSTET18.s:6232   .debug_str:00000000000009bd .LASF273
     /tmp/ccSTET18.s:5998   .debug_str:0000000000000125 .LASF274
     /tmp/ccSTET18.s:6170   .debug_str:000000000000072a .LASF275
     /tmp/ccSTET18.s:6262   .debug_str:0000000000000aee .LASF276
     /tmp/ccSTET18.s:218    .text:00000000000000c4 .LVL4
     /tmp/ccSTET18.s:246    .text:00000000000000f0 .LVL5
     /tmp/ccSTET18.s:265    .text:0000000000000108 .LVL6
     /tmp/ccSTET18.s:390    .text:0000000000000184 .LVL15
     /tmp/ccSTET18.s:445    .text:00000000000001b0 .LVL16
     /tmp/ccSTET18.s:1059   .text:00000000000004f0 .LVL71
     /tmp/ccSTET18.s:362    .text:0000000000000174 .LVL12
     /tmp/ccSTET18.s:371    .text:0000000000000178 .LVL13
     /tmp/ccSTET18.s:378    .text:000000000000017c .LVL14
     /tmp/ccSTET18.s:601    .text:00000000000001f8 .LVL19
     /tmp/ccSTET18.s:654    .text:0000000000000224 .LVL23
     /tmp/ccSTET18.s:730    .text:00000000000002a0 .LVL32
     /tmp/ccSTET18.s:803    .text:000000000000031c .LVL41
     /tmp/ccSTET18.s:818    .text:0000000000000340 .LVL43
     /tmp/ccSTET18.s:827    .text:000000000000034c .LVL45
     /tmp/ccSTET18.s:847    .text:0000000000000370 .LVL48
     /tmp/ccSTET18.s:857    .text:0000000000000380 .LVL50
     /tmp/ccSTET18.s:867    .text:0000000000000390 .LVL52
     /tmp/ccSTET18.s:877    .text:00000000000003a0 .LVL54
GAS LISTING /tmp/ccSTET18.s 			page 52


     /tmp/ccSTET18.s:908    .text:00000000000003d4 .LVL57
     /tmp/ccSTET18.s:579    .text:00000000000001e0 .LVL17
     /tmp/ccSTET18.s:595    .text:00000000000001f4 .LVL18
     /tmp/ccSTET18.s:618    .text:0000000000000204 .LVL20
     /tmp/ccSTET18.s:627    .text:0000000000000208 .LVL21
     /tmp/ccSTET18.s:642    .text:000000000000021c .LVL22
     /tmp/ccSTET18.s:667    .text:0000000000000230 .LVL24
     /tmp/ccSTET18.s:712    .text:000000000000027c .LVL30
     /tmp/ccSTET18.s:675    .text:000000000000023c .LVL25
     /tmp/ccSTET18.s:700    .text:0000000000000268 .LVL29
     /tmp/ccSTET18.s:682    .text:000000000000024c .LVL26
     /tmp/ccSTET18.s:686    .text:0000000000000250 .LVL27
     /tmp/ccSTET18.s:689    .text:0000000000000254 .LVL28
     /tmp/ccSTET18.s:740    .text:00000000000002ac .LVL33
     /tmp/ccSTET18.s:785    .text:00000000000002f8 .LVL39
     /tmp/ccSTET18.s:748    .text:00000000000002b8 .LVL34
     /tmp/ccSTET18.s:773    .text:00000000000002e4 .LVL38
     /tmp/ccSTET18.s:755    .text:00000000000002c8 .LVL35
     /tmp/ccSTET18.s:759    .text:00000000000002cc .LVL36
     /tmp/ccSTET18.s:762    .text:00000000000002d0 .LVL37
     /tmp/ccSTET18.s:964    .text:0000000000000448 .LVL61
     /tmp/ccSTET18.s:980    .text:000000000000046c .LVL62
     /tmp/ccSTET18.s:1020   .text:00000000000004ac .LVL66
     /tmp/ccSTET18.s:1049   .text:00000000000004e0 .LVL70
     /tmp/ccSTET18.s:1069   .text:00000000000004fc .LVL73
     /tmp/ccSTET18.s:1074   .text:0000000000000504 .LVL74
     /tmp/ccSTET18.s:280    .text:0000000000000110 .LVL7
     /tmp/ccSTET18.s:299    .text:0000000000000138 .LVL9
     /tmp/ccSTET18.s:306    .text:000000000000013c .LVL10
     /tmp/ccSTET18.s:60     .text:000000000000002c .LVL2
     /tmp/ccSTET18.s:70     .text:0000000000000034 .LVL3
     /tmp/ccSTET18.s:21     .text:000000000000000c .LVL0
     /tmp/ccSTET18.s:32     .text:0000000000000014 .LVL1
     /tmp/ccSTET18.s:1253   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccSTET18.s:1063   .text:00000000000004f0 .LBB151
     /tmp/ccSTET18.s:1082   .text:0000000000000510 .LBE151
     /tmp/ccSTET18.s:1092   .text:0000000000000514 .LBB168
     /tmp/ccSTET18.s:1183   .text:00000000000005b8 .LBE168
     /tmp/ccSTET18.s:1107   .text:0000000000000530 .LBE155
     /tmp/ccSTET18.s:1136   .text:0000000000000574 .LBB164
     /tmp/ccSTET18.s:1145   .text:0000000000000584 .LBE164
     /tmp/ccSTET18.s:588    .text:00000000000001ec .LBE174
     /tmp/ccSTET18.s:591    .text:00000000000001f0 .LBB177
     /tmp/ccSTET18.s:598    .text:00000000000001f4 .LBE177
     /tmp/ccSTET18.s:901    .text:00000000000003c0 .LBE192
     /tmp/ccSTET18.s:910    .text:00000000000003d4 .LBB195
     /tmp/ccSTET18.s:921    .text:00000000000003f4 .LBE195
     /tmp/ccSTET18.s:933    .text:0000000000000400 .LBE196
     /tmp/ccSTET18.s:943    .text:000000000000041c .LBB199
     /tmp/ccSTET18.s:954    .text:000000000000043c .LBE199

UNDEFINED SYMBOLS
_ZN3TCB18time_slice_counterE
_ZN2TS20decrement_and_removeEv
_ZN3TCB7runningE
_ZN3TCB15thread_dispatchEv
HEAP_START_ADDR
GAS LISTING /tmp/ccSTET18.s 			page 53


HEAP_END_ADDR
_ZN15MemoryAllocator12memory_allocEm
_ZN15MemoryAllocator11memory_freeEPv
_ZN3TCB13thread_createEPPS_PFvPvES2_S2_b
_ZN3TCB11thread_exitEv
_ZN11MySemaphore8sem_openEPPS_m
_ZN11MySemaphore9sem_closeEPS_
_ZN11MySemaphore8sem_waitEPS_
_ZN11MySemaphore10sem_signalEPS_
_ZN3TCB10time_sleepEm
_ZN7Console14get_from_inputEv
_ZN7ConsoleC1Ev
_ZN7Console13put_in_outputEc
_ZN9Scheduler4headE
_ZN9Scheduler4tailE
_ZN9Scheduler3putEP3TCB
_ZN14periodicThread3putEP3TCB
plic_claim
plic_complete
CONSOLE_RX_DATA
_ZN7Console12put_in_inputEc
CONSOLE_STATUS
_ZN14periodicThread3getEv
